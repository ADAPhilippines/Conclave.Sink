(()=>{"use strict";var e,t,r,s,a,n,i={882:(e,t,r)=>{r.a(e,(async(e,t)=>{try{var s=r(571),a=e([s]);s=(a.then?(await a)():a)[0];const n=()=>{const e=[],t=window.cardano;for(const r in t){const s=t[r];null!=s.apiVersion&&null!=s.icon&&null!=s.name&&"ccvault"!==r&&e.push({apiVersion:s.apiVersion,icon:s.icon,name:s.name,id:r.toString()})}return e},i=async e=>{try{const t=window.cardano,r=await t[e].enable();window.CardanoWalletService.lucid=await s._k.new(new s.Oo("https://kupo-preview-api-teddy-swap-preview-414e80.us1.demeter.run","wss://ogmios-preview-api-teddy-swap-preview-414e80.us1.demeter.run"),"Preview"),window.CardanoWalletService.lucid.selectWallet(r),window.CardanoWalletService.walletApi=r}catch(e){console.error(e)}finally{return null!=window.CardanoWalletService.lucid}},o=async()=>await(window.CardanoWalletService.lucid?.wallet.address()),u=async()=>null!=window.CardanoWalletService.walletApi?(await window.CardanoWalletService.walletApi.getUsedAddresses()).map((e=>window.CardanoWalletService.lucid?.utils.getAddressDetails(e).address.bech32)).filter((e=>e)):[],c=async e=>{const t=await l();return await(window.CardanoWalletService.lucid?.wallet.signMessage(t,e))},l=async()=>await(window.CardanoWalletService.lucid?.wallet.rewardAddress()),d=()=>{delete window.CardanoWalletService.lucid,delete window.CardanoWalletService.walletApi};window.CardanoWalletService={enableAsync:i,disconnect:d,getWallets:n,getAddressAsync:o,getUsedAddressesAsync:u,signMessageAsync:c,getStakeAddressAsync:l},t()}catch(e){t(e)}}))},378:(e,t,r)=>{e.exports=r.p+"076fbae3fe7e20fe3173.wasm"},534:(e,t,r)=>{e.exports=r.p+"b575e92051802f01a358.wasm"},507:(e,t,r)=>{r.d(t,{tm:()=>n,v5:()=>i});const s=(new TextEncoder).encode("0123456789abcdef");function a(e){if(48<=e&&e<=57)return e-48;if(97<=e&&e<=102)return e-97+10;if(65<=e&&e<=70)return e-65+10;throw function(e){return new Error("encoding/hex: invalid byte: "+(new TextDecoder).decode(new Uint8Array([e])))}(e)}function n(e){return(new TextDecoder).decode(function(e){const t=new Uint8Array(2*e.length);for(let r=0;r<t.length;r++){const a=e[r];t[2*r]=s[a>>4],t[2*r+1]=s[15&a]}return t}(e))}function i(e){return function(e){const t=new Uint8Array(e.length>>>1);for(let r=0;r<t.length;r++){const s=a(e[2*r]),n=a(e[2*r+1]);t[r]=s<<4|n}if(e.length%2==1)throw a(e[2*t.length]),new Error("encoding/hex: odd length hex string");return t}((new TextEncoder).encode(e))}},246:(e,t,r)=>{r.d(t,{f:()=>B});var s,a,n,i,o,u,c,l,d,h,m,p,g,y,f,w,b,_,C=function(e,t,r,s,a){if("m"===s)throw new TypeError("Private method is not writable");if("a"===s&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!a:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?a.call(e,r):a?a.value=r:t.set(e,r),r},v=function(e,t,r,s){if("a"===r&&!s)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?s:"a"===r?s.call(e):s?s.value:t.get(e)};const k="0123456789abcdef".split(""),x=[-2147483648,8388608,32768,128],S=[24,16,8,0],I=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],E=[];class B{constructor(e=!1,t=!1){s.set(this,void 0),a.set(this,void 0),n.set(this,void 0),i.set(this,void 0),o.set(this,void 0),u.set(this,void 0),c.set(this,void 0),l.set(this,void 0),d.set(this,void 0),h.set(this,void 0),m.set(this,void 0),p.set(this,void 0),g.set(this,void 0),y.set(this,void 0),f.set(this,void 0),w.set(this,void 0),b.set(this,0),_.set(this,void 0),this.init(e,t)}init(e,t){t?(E[0]=E[16]=E[1]=E[2]=E[3]=E[4]=E[5]=E[6]=E[7]=E[8]=E[9]=E[10]=E[11]=E[12]=E[13]=E[14]=E[15]=0,C(this,a,E,"f")):C(this,a,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f"),e?(C(this,u,3238371032,"f"),C(this,c,914150663,"f"),C(this,l,812702999,"f"),C(this,d,4144912697,"f"),C(this,h,4290775857,"f"),C(this,m,1750603025,"f"),C(this,p,1694076839,"f"),C(this,g,3204075428,"f")):(C(this,u,1779033703,"f"),C(this,c,3144134277,"f"),C(this,l,1013904242,"f"),C(this,d,2773480762,"f"),C(this,h,1359893119,"f"),C(this,m,2600822924,"f"),C(this,p,528734635,"f"),C(this,g,1541459225,"f")),C(this,s,C(this,_,C(this,n,C(this,f,0,"f"),"f"),"f"),"f"),C(this,i,C(this,y,!1,"f"),"f"),C(this,o,!0,"f"),C(this,w,e,"f")}update(e){if(v(this,i,"f"))return this;let t;t=e instanceof ArrayBuffer?new Uint8Array(e):e;let r=0;const o=t.length,u=v(this,a,"f");for(;r<o;){let e;if(v(this,y,"f")&&(C(this,y,!1,"f"),u[0]=v(this,s,"f"),u[16]=u[1]=u[2]=u[3]=u[4]=u[5]=u[6]=u[7]=u[8]=u[9]=u[10]=u[11]=u[12]=u[13]=u[14]=u[15]=0),"string"!=typeof t)for(e=v(this,_,"f");r<o&&e<64;++r)u[e>>2]|=t[r]<<S[3&e++];else for(e=v(this,_,"f");r<o&&e<64;++r){let s=t.charCodeAt(r);s<128?u[e>>2]|=s<<S[3&e++]:s<2048?(u[e>>2]|=(192|s>>6)<<S[3&e++],u[e>>2]|=(128|63&s)<<S[3&e++]):s<55296||s>=57344?(u[e>>2]|=(224|s>>12)<<S[3&e++],u[e>>2]|=(128|s>>6&63)<<S[3&e++],u[e>>2]|=(128|63&s)<<S[3&e++]):(s=65536+((1023&s)<<10|1023&t.charCodeAt(++r)),u[e>>2]|=(240|s>>18)<<S[3&e++],u[e>>2]|=(128|s>>12&63)<<S[3&e++],u[e>>2]|=(128|s>>6&63)<<S[3&e++],u[e>>2]|=(128|63&s)<<S[3&e++])}C(this,b,e,"f"),C(this,n,v(this,n,"f")+(e-v(this,_,"f")),"f"),e>=64?(C(this,s,u[16],"f"),C(this,_,e-64,"f"),this.hash(),C(this,y,!0,"f")):C(this,_,e,"f")}return v(this,n,"f")>4294967295&&(C(this,f,v(this,f,"f")+(v(this,n,"f")/4294967296<<0),"f"),C(this,n,v(this,n,"f")%4294967296,"f")),this}finalize(){if(v(this,i,"f"))return;C(this,i,!0,"f");const e=v(this,a,"f"),t=v(this,b,"f");e[16]=v(this,s,"f"),e[t>>2]|=x[3&t],C(this,s,e[16],"f"),t>=56&&(v(this,y,"f")||this.hash(),e[0]=v(this,s,"f"),e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=v(this,f,"f")<<3|v(this,n,"f")>>>29,e[15]=v(this,n,"f")<<3,this.hash()}hash(){let e=v(this,u,"f"),t=v(this,c,"f"),r=v(this,l,"f"),s=v(this,d,"f"),n=v(this,h,"f"),i=v(this,m,"f"),y=v(this,p,"f"),f=v(this,g,"f");const b=v(this,a,"f");let _,k,x,S,E,B,P,T,O,A;for(let e=16;e<64;++e)S=b[e-15],_=(S>>>7|S<<25)^(S>>>18|S<<14)^S>>>3,S=b[e-2],k=(S>>>17|S<<15)^(S>>>19|S<<13)^S>>>10,b[e]=b[e-16]+_+b[e-7]+k<<0;A=t&r;for(let a=0;a<64;a+=4)v(this,o,"f")?(v(this,w,"f")?(P=300032,S=b[0]-1413257819,f=S-150054599<<0,s=S+24177077<<0):(P=704751109,S=b[0]-210244248,f=S-1521486534<<0,s=S+143694565<<0),C(this,o,!1,"f")):(_=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),k=(n>>>6|n<<26)^(n>>>11|n<<21)^(n>>>25|n<<7),P=e&t,x=P^e&r^A,B=n&i^~n&y,S=f+k+B+I[a]+b[a],E=_+x,f=s+S<<0,s=S+E<<0),_=(s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10),k=(f>>>6|f<<26)^(f>>>11|f<<21)^(f>>>25|f<<7),T=s&e,x=T^s&t^P,B=f&n^~f&i,S=y+k+B+I[a+1]+b[a+1],E=_+x,y=r+S<<0,r=S+E<<0,_=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),k=(y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7),O=r&s,x=O^r&e^T,B=y&f^~y&n,S=i+k+B+I[a+2]+b[a+2],E=_+x,i=t+S<<0,t=S+E<<0,_=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),k=(i>>>6|i<<26)^(i>>>11|i<<21)^(i>>>25|i<<7),A=t&r,x=A^t&s^O,B=i&y^~i&f,S=n+k+B+I[a+3]+b[a+3],E=_+x,n=e+S<<0,e=S+E<<0;C(this,u,v(this,u,"f")+e<<0,"f"),C(this,c,v(this,c,"f")+t<<0,"f"),C(this,l,v(this,l,"f")+r<<0,"f"),C(this,d,v(this,d,"f")+s<<0,"f"),C(this,h,v(this,h,"f")+n<<0,"f"),C(this,m,v(this,m,"f")+i<<0,"f"),C(this,p,v(this,p,"f")+y<<0,"f"),C(this,g,v(this,g,"f")+f<<0,"f")}hex(){this.finalize();const e=v(this,u,"f"),t=v(this,c,"f"),r=v(this,l,"f"),s=v(this,d,"f"),a=v(this,h,"f"),n=v(this,m,"f"),i=v(this,p,"f"),o=v(this,g,"f");let y=k[e>>28&15]+k[e>>24&15]+k[e>>20&15]+k[e>>16&15]+k[e>>12&15]+k[e>>8&15]+k[e>>4&15]+k[15&e]+k[t>>28&15]+k[t>>24&15]+k[t>>20&15]+k[t>>16&15]+k[t>>12&15]+k[t>>8&15]+k[t>>4&15]+k[15&t]+k[r>>28&15]+k[r>>24&15]+k[r>>20&15]+k[r>>16&15]+k[r>>12&15]+k[r>>8&15]+k[r>>4&15]+k[15&r]+k[s>>28&15]+k[s>>24&15]+k[s>>20&15]+k[s>>16&15]+k[s>>12&15]+k[s>>8&15]+k[s>>4&15]+k[15&s]+k[a>>28&15]+k[a>>24&15]+k[a>>20&15]+k[a>>16&15]+k[a>>12&15]+k[a>>8&15]+k[a>>4&15]+k[15&a]+k[n>>28&15]+k[n>>24&15]+k[n>>20&15]+k[n>>16&15]+k[n>>12&15]+k[n>>8&15]+k[n>>4&15]+k[15&n]+k[i>>28&15]+k[i>>24&15]+k[i>>20&15]+k[i>>16&15]+k[i>>12&15]+k[i>>8&15]+k[i>>4&15]+k[15&i];return v(this,w,"f")||(y+=k[o>>28&15]+k[o>>24&15]+k[o>>20&15]+k[o>>16&15]+k[o>>12&15]+k[o>>8&15]+k[o>>4&15]+k[15&o]),y}toString(){return this.hex()}digest(){this.finalize();const e=v(this,u,"f"),t=v(this,c,"f"),r=v(this,l,"f"),s=v(this,d,"f"),a=v(this,h,"f"),n=v(this,m,"f"),i=v(this,p,"f"),o=v(this,g,"f"),y=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,r>>24&255,r>>16&255,r>>8&255,255&r,s>>24&255,s>>16&255,s>>8&255,255&s,a>>24&255,a>>16&255,a>>8&255,255&a,n>>24&255,n>>16&255,n>>8&255,255&n,i>>24&255,i>>16&255,i>>8&255,255&i];return v(this,w,"f")||y.push(o>>24&255,o>>16&255,o>>8&255,255&o),y}array(){return this.digest()}arrayBuffer(){this.finalize();const e=new ArrayBuffer(v(this,w,"f")?28:32),t=new DataView(e);return t.setUint32(0,v(this,u,"f")),t.setUint32(4,v(this,c,"f")),t.setUint32(8,v(this,l,"f")),t.setUint32(12,v(this,d,"f")),t.setUint32(16,v(this,h,"f")),t.setUint32(20,v(this,m,"f")),t.setUint32(24,v(this,p,"f")),v(this,w,"f")||t.setUint32(28,v(this,g,"f")),e}}s=new WeakMap,a=new WeakMap,n=new WeakMap,i=new WeakMap,o=new WeakMap,u=new WeakMap,c=new WeakMap,l=new WeakMap,d=new WeakMap,h=new WeakMap,m=new WeakMap,p=new WeakMap,g=new WeakMap,y=new WeakMap,f=new WeakMap,w=new WeakMap,b=new WeakMap,_=new WeakMap,new WeakMap,new WeakMap,new WeakMap,new WeakMap},384:(e,t,r)=>{r.d(t,{Dy:()=>o});const s=Symbol.for("TypeBox.Kind"),a=Symbol.for("TypeBox.Hint"),n=Symbol.for("TypeBox.Modifier");let i=0;const o=new class{ReadonlyOptional(e){return{[n]:"ReadonlyOptional",...e}}Readonly(e){return{[n]:"Readonly",...e}}Optional(e){return{[n]:"Optional",...e}}Any(e={}){return this.Create({...e,[s]:"Any"})}Array(e,t={}){return this.Create({...t,[s]:"Array",type:"array",items:e})}Boolean(e={}){return this.Create({...e,[s]:"Boolean",type:"boolean"})}ConstructorParameters(e,t={}){return this.Tuple([...e.parameters],{...t})}Constructor(e,t,r={}){if("Tuple"===e[s]){const a=void 0===e.items?[]:e.items;return this.Create({...r,[s]:"Constructor",type:"object",instanceOf:"Constructor",parameters:a,returns:t})}if(globalThis.Array.isArray(e))return this.Create({...r,[s]:"Constructor",type:"object",instanceOf:"Constructor",parameters:e,returns:t});throw new Error("TypeBuilder.Constructor: Invalid parameters")}Date(e={}){return this.Create({...e,[s]:"Date",type:"object",instanceOf:"Date"})}Enum(e,t={}){const r=Object.keys(e).filter((e=>isNaN(e))).map((t=>e[t])).map((e=>"string"==typeof e?{[s]:"Literal",type:"string",const:e}:{[s]:"Literal",type:"number",const:e}));return this.Create({...t,[s]:"Union",[a]:"Enum",anyOf:r})}Function(e,t,r={}){if("Tuple"===e[s]){const a=void 0===e.items?[]:e.items;return this.Create({...r,[s]:"Function",type:"object",instanceOf:"Function",parameters:a,returns:t})}if(globalThis.Array.isArray(e))return this.Create({...r,[s]:"Function",type:"object",instanceOf:"Function",parameters:e,returns:t});throw new Error("TypeBuilder.Function: Invalid parameters")}InstanceType(e,t={}){return{...t,...this.Clone(e.returns)}}Integer(e={}){return this.Create({...e,[s]:"Integer",type:"integer"})}Intersect(e,t={}){const r=e=>e[n]&&"Optional"===e[n]||"ReadonlyOptional"===e[n],[a,i]=[new Set,new Set];for(const t of e)for(const[e,s]of Object.entries(t.properties))r(s)&&i.add(e);for(const t of e)for(const e of Object.keys(t.properties))i.has(e)||a.add(e);const o={};for(const t of e)for(const[e,r]of Object.entries(t.properties))o[e]=void 0===o[e]?r:{[s]:"Union",anyOf:[o[e],{...r}]};return a.size>0?this.Create({...t,[s]:"Object",type:"object",properties:o,required:[...a]}):this.Create({...t,[s]:"Object",type:"object",properties:o})}KeyOf(e,t={}){const r=Object.keys(e.properties).map((e=>this.Create({...t,[s]:"Literal",type:"string",const:e})));return this.Create({...t,[s]:"Union",[a]:"KeyOf",anyOf:r})}Literal(e,t={}){return this.Create({...t,[s]:"Literal",const:e,type:typeof e})}Never(e={}){return this.Create({...e,[s]:"Never",allOf:[{type:"boolean",const:!1},{type:"boolean",const:!0}]})}Null(e={}){return this.Create({...e,[s]:"Null",type:"null"})}Number(e={}){return this.Create({...e,[s]:"Number",type:"number"})}Object(e,t={}){const r=Object.keys(e),a=r.filter((t=>{const r=e[t][n];return r&&("Optional"===r||"ReadonlyOptional"===r)})),i=r.filter((e=>!a.includes(e)));return i.length>0?this.Create({...t,[s]:"Object",type:"object",properties:e,required:i}):this.Create({...t,[s]:"Object",type:"object",properties:e})}Omit(e,t,r={}){const n="Union"===t[s]?t.anyOf.map((e=>e.const)):t,i={...this.Clone(e),...r,[a]:"Omit"};i.required&&(i.required=i.required.filter((e=>!n.includes(e))),0===i.required.length&&delete i.required);for(const e of Object.keys(i.properties))n.includes(e)&&delete i.properties[e];return this.Create(i)}Parameters(e,t={}){return o.Tuple(e.parameters,{...t})}Partial(e,t={}){const r={...this.Clone(e),...t,[a]:"Partial"};delete r.required;for(const e of Object.keys(r.properties)){const t=r.properties[e];switch(t[n]){case"ReadonlyOptional":case"Readonly":t[n]="ReadonlyOptional";break;default:t[n]="Optional"}}return this.Create(r)}Pick(e,t,r={}){const n="Union"===t[s]?t.anyOf.map((e=>e.const)):t,i={...this.Clone(e),...r,[a]:"Pick"};i.required&&(i.required=i.required.filter((e=>n.includes(e))),0===i.required.length&&delete i.required);for(const e of Object.keys(i.properties))n.includes(e)||delete i.properties[e];return this.Create(i)}Promise(e,t={}){return this.Create({...t,[s]:"Promise",type:"object",instanceOf:"Promise",item:e})}Record(e,t,r={}){if("Union"===e[s])return this.Object(e.anyOf.reduce(((e,r)=>({...e,[r.const]:t})),{}),{...r,[a]:"Record"});const n=["Integer","Number"].includes(e[s])?"^(0|[1-9][0-9]*)$":"String"===e[s]&&e.pattern?e.pattern:"^.*$";return this.Create({...r,[s]:"Record",type:"object",patternProperties:{[n]:t},additionalProperties:!1})}Recursive(e,t={}){void 0===t.$id&&(t.$id="T"+i++);const r=e({[s]:"Self",$ref:`${t.$id}`});return r.$id=t.$id,this.Create({...t,...r})}Ref(e,t={}){if(void 0===e.$id)throw Error("TypeBuilder.Ref: Referenced schema must specify an $id");return this.Create({...t,[s]:"Ref",$ref:e.$id})}RegEx(e,t={}){return this.Create({...t,[s]:"String",type:"string",pattern:e.source})}Required(e,t={}){const r={...this.Clone(e),...t,[a]:"Required"};r.required=Object.keys(r.properties);for(const e of Object.keys(r.properties)){const t=r.properties[e];switch(t[n]){case"ReadonlyOptional":case"Readonly":t[n]="Readonly";break;default:delete t[n]}}return this.Create(r)}ReturnType(e,t={}){return{...t,...this.Clone(e.returns)}}Strict(e){return JSON.parse(JSON.stringify(e))}String(e={}){return this.Create({...e,[s]:"String",type:"string"})}Tuple(e,t={}){const r=e.length,a=e.length,n=e.length>0?{...t,[s]:"Tuple",type:"array",items:e,additionalItems:!1,minItems:r,maxItems:a}:{...t,[s]:"Tuple",type:"array",minItems:r,maxItems:a};return this.Create(n)}Undefined(e={}){return this.Create({...e,[s]:"Undefined",type:"null",typeOf:"Undefined"})}Union(e,t={}){return 0===e.length?o.Never({...t}):this.Create({...t,[s]:"Union",anyOf:e})}Uint8Array(e={}){return this.Create({...e,[s]:"Uint8Array",type:"object",instanceOf:"Uint8Array"})}Unknown(e={}){return this.Create({...e,[s]:"Unknown"})}Unsafe(e={}){return this.Create({...e,[s]:e[s]||"Unsafe"})}Void(e={}){return this.Create({...e,[s]:"Void",type:"null",typeOf:"Void"})}Create(e){return e}Clone(e){return"object"!=typeof(t=e)||null===t||Array.isArray(t)?(e=>"object"==typeof e&&null!==e&&Array.isArray(e))(e)?e.map((e=>this.Clone(e))):e:Object.keys(e).reduce(((t,r)=>({...t,[r]:this.Clone(e[r])})),Object.getOwnPropertySymbols(e).reduce(((t,r)=>({...t,[r]:this.Clone(e[r])})),{}));var t}}},571:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{Oo:()=>a.Oo,_k:()=>a._k});var a=r(380),n=e([a]);a=(n.then?(await n)():n)[0],s()}catch(e){s(e)}}))},110:(e,t,r)=>{r.d(t,{Z:()=>s});const s={name:"lucid-cardano",version:"0.9.4",license:"MIT",author:"Alessandro Konrad",description:"Lucid is a library, which allows you to create Cardano transactions and off-chain code for your Plutus contracts in JavaScript, Deno and Node.js.",repository:"https://github.com/spacebudz/lucid"}},812:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{C:()=>c,M:()=>l});const a="undefined"==typeof window;if(a){const d=await import("node-fetch"),{Crypto:h}=await import("@peculiar/webcrypto"),{WebSocket:m}=await import("ws");global.WebSocket||(global.WebSocket=m),global.crypto||(global.crypto=new h),global.fetch||(global.fetch=d.default),global.Headers||(global.Headers=d.Headers),global.Request||(global.Request=d.Request),global.Response||(global.Response=d.Response)}async function n(){try{if(a)return await import("./wasm_modules/cardano_multiplatform_lib_nodejs/cardano_multiplatform_lib.js");const e=await r.e(277).then(r.bind(r,277));return await e.default(await fetch(new URL(r(534),r.b))),e}catch(e){return null}}async function i(){try{if(a)return await import("./wasm_modules/cardano_message_signing_nodejs/cardano_message_signing.js");const e=await r.e(643).then(r.bind(r,643));return await e.default(await fetch(new URL(r(378),r.b))),e}catch(e){return null}}const[o,u]=await Promise.all([n(),i()]),c=o,l=u;s()}catch(p){s(p)}}),1)},609:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{C:()=>a.C,M:()=>a.M});var a=r(812),n=e([a]);a=(n.then?(await n)():n)[0],s()}catch(e){s(e)}}))},716:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{_:()=>g});var a=r(609),n=r(483),i=r(687),o=r(676),u=r(145),c=r(771),l=r(239),d=r(271),h=r(611),m=r(802),p=e([a,n,i,o,u,c,l,h,m]);[a,n,i,o,u,c,l,h,m]=p.then?(await p)():p;class g{constructor(){Object.defineProperty(this,"txBuilderConfig",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"provider",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"network",{enumerable:!0,configurable:!0,writable:!0,value:"Mainnet"}),Object.defineProperty(this,"utils",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}static async new(e,t){const r=new this;if(t&&(r.network=t),e){r.provider=e;const t=await e.getProtocolParameters();r.provider instanceof m.G&&(r.network="Custom",d.BV[r.network]={zeroTime:r.provider.now(),zeroSlot:0,slotLength:1e3});const s=d.BV[r.network];r.txBuilderConfig=a.C.TransactionBuilderConfigBuilder.new().coins_per_utxo_byte(a.C.BigNum.from_str(t.coinsPerUtxoByte.toString())).fee_algo(a.C.LinearFee.new(a.C.BigNum.from_str(t.minFeeA.toString()),a.C.BigNum.from_str(t.minFeeB.toString()))).key_deposit(a.C.BigNum.from_str(t.keyDeposit.toString())).pool_deposit(a.C.BigNum.from_str(t.poolDeposit.toString())).max_tx_size(t.maxTxSize).max_value_size(t.maxValSize).collateral_percentage(t.collateralPercentage).max_collateral_inputs(t.maxCollateralInputs).max_tx_ex_units(a.C.ExUnits.new(a.C.BigNum.from_str(t.maxTxExMem.toString()),a.C.BigNum.from_str(t.maxTxExSteps.toString()))).ex_unit_prices(a.C.ExUnitPrices.from_float(t.priceMem,t.priceStep)).slot_config(a.C.BigNum.from_str(s.zeroTime.toString()),a.C.BigNum.from_str(s.zeroSlot.toString()),s.slotLength).blockfrost(a.C.Blockfrost.new((e?.url||"")+"/utils/txs/evaluate",e?.projectId||"")).costmdls((0,n.sJ)(t.costModels)).build()}return r.utils=new n.cQ(r),r}async switchProvider(e,t){if("Custom"===this.network)throw new Error("Cannot switch when on custom network.");const r=await g.new(e,t);return this.txBuilderConfig=r.txBuilderConfig,this.provider=e||this.provider,this.network=t||this.network,this.wallet=r.wallet,this}newTx(){return new i.Tx(this)}fromTx(e){return new o.u(this,a.C.Transaction.from_bytes((0,n.H_)(e)))}newMessage(e,t){return new l.v(this,e,t)}verifyMessage(e,t,r){const{paymentCredential:s,stakeCredential:a,address:{hex:n}}=this.utils.getAddressDetails(e),i=s?.hash||a?.hash;if(!i)throw new Error("Not a valid address provided.");return(0,c._)(n,i,t,r)}currentSlot(){return this.utils.unixTimeToSlot(Date.now())}utxosAt(e){return this.provider.getUtxos(e)}utxosAtWithUnit(e,t){return this.provider.getUtxosWithUnit(e,t)}utxoByUnit(e){return this.provider.getUtxoByUnit(e)}utxosByOutRef(e){return this.provider.getUtxosByOutRef(e)}delegationAt(e){return this.provider.getDelegation(e)}awaitTx(e,t=3e3){return this.provider.awaitTx(e,t)}async datumOf(e,t){if(!e.datum){if(!e.datumHash)throw new Error("This UTxO does not have a datum hash.");e.datum=await this.provider.getDatum(e.datumHash)}return t?h.V.from(e.datum,t):e.datum}selectWalletFromPrivateKey(e){const t=a.C.PrivateKey.from_bech32(e),r=t.to_public().hash();return this.wallet={address:async()=>a.C.EnterpriseAddress.new("Mainnet"===this.network?1:0,a.C.StakeCredential.from_keyhash(r)).to_address().to_bech32(void 0),rewardAddress:async()=>null,getUtxos:async()=>await this.utxosAt((0,n.I9)(await this.wallet.address())),getUtxosCore:async()=>{const e=await this.utxosAt((0,n.I9)(await this.wallet.address())),t=a.C.TransactionUnspentOutputs.new();return e.forEach((e=>{t.add((0,n.Sw)(e))})),t},getDelegation:async()=>({poolId:null,rewards:0n}),signTx:async e=>{const r=a.C.make_vkey_witness(a.C.hash_transaction(e.body()),t),s=a.C.TransactionWitnessSetBuilder.new();return s.add_vkey(r),s.build()},signMessage:async(t,s)=>{const{paymentCredential:a,address:{hex:n}}=this.utils.getAddressDetails(t),i=a?.hash,o=r.to_hex();if(!i||i!==o)throw new Error(`Cannot sign message for address: ${t}.`);return(0,c.r)(n,s,e)},submitTx:async e=>await this.provider.submitTx(e)},this}selectWallet(e){return this.wallet={address:async()=>a.C.Address.from_bytes((0,n.H_)(await(async()=>{const[t]=await e.getUsedAddresses();if(t)return t;const[r]=await e.getUnusedAddresses();return r})())).to_bech32(void 0),rewardAddress:async()=>{const[t]=await e.getRewardAddresses();return t?a.C.RewardAddress.from_address(a.C.Address.from_bytes((0,n.H_)(t))).to_address().to_bech32(void 0):null},getUtxos:async()=>(await e.getUtxos()||[]).map((e=>{const t=a.C.TransactionUnspentOutput.from_bytes((0,n.H_)(e));return(0,n.lo)(t)})),getUtxosCore:async()=>{const t=a.C.TransactionUnspentOutputs.new();return(await e.getUtxos()||[]).forEach((e=>{t.add(a.C.TransactionUnspentOutput.from_bytes((0,n.H_)(e)))})),t},getDelegation:async()=>{const e=await this.wallet.rewardAddress();return e?await this.delegationAt(e):{poolId:null,rewards:0n}},signTx:async t=>{const r=await e.signTx((0,n.NC)(t.to_bytes()),!0);return a.C.TransactionWitnessSet.from_bytes((0,n.H_)(r))},signMessage:async(t,r)=>{const s=(0,n.NC)(a.C.Address.from_bech32(t).to_bytes());return await e.signData(s,r)},submitTx:async t=>await e.submitTx(t)},this}selectWalletFrom({address:e,utxos:t,rewardAddress:r}){const s=this.utils.getAddressDetails(e);return this.wallet={address:async()=>e,rewardAddress:async()=>(!r&&s.stakeCredential?(()=>"Key"===s.stakeCredential.type?a.C.RewardAddress.new("Mainnet"===this.network?1:0,a.C.StakeCredential.from_keyhash(a.C.Ed25519KeyHash.from_hex(s.stakeCredential.hash))).to_address().to_bech32(void 0):a.C.RewardAddress.new("Mainnet"===this.network?1:0,a.C.StakeCredential.from_scripthash(a.C.ScriptHash.from_hex(s.stakeCredential.hash))).to_address().to_bech32(void 0))():r)||null,getUtxos:async()=>t||await this.utxosAt((0,n.I9)(e)),getUtxosCore:async()=>{const r=a.C.TransactionUnspentOutputs.new();return(t||await this.utxosAt((0,n.I9)(e))).forEach((e=>r.add((0,n.Sw)(e)))),r},getDelegation:async()=>{const e=await this.wallet.rewardAddress();return e?await this.delegationAt(e):{poolId:null,rewards:0n}},signTx:async()=>{throw new Error("Not implemented")},signMessage:async()=>{throw new Error("Not implemented")},submitTx:async e=>await this.provider.submitTx(e)},this}selectWalletFromSeed(e,t){const{address:r,rewardAddress:s,paymentKey:i,stakeKey:o}=(0,u.n)(e,{addressType:t?.addressType||"Base",accountIndex:t?.accountIndex||0,password:t?.password,network:this.network}),l=a.C.PrivateKey.from_bech32(i).to_public().hash().to_hex(),d=o?a.C.PrivateKey.from_bech32(o).to_public().hash().to_hex():"",h={[l]:i,[d]:o};return this.wallet={address:async()=>r,rewardAddress:async()=>s||null,getUtxos:async()=>this.utxosAt((0,n.I9)(r)),getUtxosCore:async()=>{const e=a.C.TransactionUnspentOutputs.new();return(await this.utxosAt((0,n.I9)(r))).forEach((t=>e.add((0,n.Sw)(t)))),e},getDelegation:async()=>{const e=await this.wallet.rewardAddress();return e?await this.delegationAt(e):{poolId:null,rewards:0n}},signTx:async e=>{const t=await this.utxosAt(r),s=[l,d],n=(0,u.W)(e,s,t),i=a.C.TransactionWitnessSetBuilder.new();return n.forEach((t=>{const r=a.C.make_vkey_witness(a.C.hash_transaction(e.body()),a.C.PrivateKey.from_bech32(h[t]));i.add_vkey(r)})),i.build()},signMessage:async(e,t)=>{const{paymentCredential:r,stakeCredential:s,address:{hex:a}}=this.utils.getAddressDetails(e),n=h[r?.hash||s?.hash];if(!n)throw new Error(`Cannot sign message for address: ${e}.`);return(0,c.r)(a,t,n)},submitTx:async e=>await this.provider.submitTx(e)},this}}s()}catch(e){s(e)}}))},239:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{v:()=>o});var a=r(771),n=r(380),i=e([a,n]);[a,n]=i.then?(await i)():i;class o{constructor(e,t,r){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"payload",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.address=t,this.payload=r}sign(){return this.lucid.wallet.signMessage(this.address,this.payload)}signWithPrivateKey(e){const{paymentCredential:t,stakeCredential:r,address:{hex:s}}=this.lucid.utils.getAddressDetails(this.address),i=t?.hash||r?.hash,o=n.C.PrivateKey.from_bech32(e).to_public().hash().to_hex();if(!i||i!==o)throw new Error(`Cannot sign message for address: ${this.address}.`);return(0,a.r)(s,this.payload,e)}}s()}catch(e){s(e)}}))},669:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{_k:()=>a._});var a=r(716),n=r(687),i=r(676),o=r(866),u=e([a,n,i,o]);[a,n,i,o]=u.then?(await u)():u,s()}catch(e){s(e)}}))},687:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{Tx:()=>c});var a=r(609),n=r(483),i=r(65),o=r(676),u=e([a,n,i,o]);[a,n,i,o]=u.then?(await u)():u;class c{constructor(e){Object.defineProperty(this,"txBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.txBuilder=a.C.TransactionBuilder.new(this.lucid.txBuilderConfig),this.tasks=[]}readFrom(e){return this.tasks.push((async t=>{for(const r of e){if(r.datumHash){r.datum=await t.lucid.datumOf(r);const e=a.C.PlutusData.from_bytes((0,n.H_)(r.datum));t.txBuilder.add_plutus_data(e)}const e=(0,n.Sw)(r);t.txBuilder.add_reference_input(e)}})),this}collectFrom(e,t){return this.tasks.push((async r=>{for(const s of e){s.datumHash&&!s.datum&&(s.datum=await r.lucid.datumOf(s));const e=(0,n.Sw)(s);r.txBuilder.add_input(e,t&&a.C.ScriptWitness.new_plutus_witness(a.C.PlutusWitness.new(a.C.PlutusData.from_bytes((0,n.H_)(t)),s.datumHash&&s.datum?a.C.PlutusData.from_bytes((0,n.H_)(s.datum)):void 0,void 0)))}})),this}mintAssets(e,t){return this.tasks.push((r=>{const s=Object.keys(e),i=s[0].slice(0,56),o=a.C.MintAssets.new();s.forEach((t=>{if(t.slice(0,56)!==i)throw new Error("Only one policy id allowed. You can chain multiple mintAssets functions together if you need to mint assets with different policy ids.");o.insert(a.C.AssetName.new((0,n.H_)(t.slice(56))),a.C.Int.from_str(e[t].toString()))}));const u=a.C.ScriptHash.from_bytes((0,n.H_)(i));r.txBuilder.add_mint(u,o,t?a.C.ScriptWitness.new_plutus_witness(a.C.PlutusWitness.new(a.C.PlutusData.from_bytes((0,n.H_)(t)),void 0,void 0)):void 0)})),this}payToAddress(e,t){return this.tasks.push((r=>{const s=a.C.TransactionOutput.new(h(e,r.lucid),(0,n.D)(t));r.txBuilder.add_output(s)})),this}payToAddressWithData(e,t,r){return this.tasks.push((s=>{if("string"==typeof t&&(t={asHash:t}),[t.hash,t.asHash,t.inline].filter((e=>e)).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");const i=a.C.TransactionOutput.new(h(e,s.lucid),(0,n.D)(r));if(t.hash)i.set_datum(a.C.Datum.new_data_hash(a.C.DataHash.from_hex(t.hash)));else if(t.asHash){const e=a.C.PlutusData.from_bytes((0,n.H_)(t.asHash));i.set_datum(a.C.Datum.new_data_hash(a.C.hash_plutus_data(e))),s.txBuilder.add_plutus_data(e)}else if(t.inline){const e=a.C.PlutusData.from_bytes((0,n.H_)(t.inline));i.set_datum(a.C.Datum.new_data(a.C.Data.new(e)))}const o=t.scriptRef;o&&i.set_script_ref((0,n.pZ)(o)),s.txBuilder.add_output(i)})),this}payToContract(e,t,r){if("string"==typeof t&&(t={asHash:t}),!(t.hash||t.asHash||t.inline))throw new Error("No datum set. Script output becomes unspendable without datum.");return this.payToAddressWithData(e,t,r)}delegateTo(e,t,r){return this.tasks.push((s=>{const i=s.lucid.utils.getAddressDetails(e);if("Reward"!==i.type||!i.stakeCredential)throw new Error("Not a reward address provided.");const o="Key"===i.stakeCredential.type?a.C.StakeCredential.from_keyhash(a.C.Ed25519KeyHash.from_bytes((0,n.H_)(i.stakeCredential.hash))):a.C.StakeCredential.from_scripthash(a.C.ScriptHash.from_bytes((0,n.H_)(i.stakeCredential.hash)));s.txBuilder.add_certificate(a.C.Certificate.new_stake_delegation(a.C.StakeDelegation.new(o,a.C.Ed25519KeyHash.from_bech32(t))),r?a.C.ScriptWitness.new_plutus_witness(a.C.PlutusWitness.new(a.C.PlutusData.from_bytes((0,n.H_)(r)),void 0,void 0)):void 0)})),this}registerStake(e){return this.tasks.push((t=>{const r=t.lucid.utils.getAddressDetails(e);if("Reward"!==r.type||!r.stakeCredential)throw new Error("Not a reward address provided.");const s="Key"===r.stakeCredential.type?a.C.StakeCredential.from_keyhash(a.C.Ed25519KeyHash.from_bytes((0,n.H_)(r.stakeCredential.hash))):a.C.StakeCredential.from_scripthash(a.C.ScriptHash.from_bytes((0,n.H_)(r.stakeCredential.hash)));t.txBuilder.add_certificate(a.C.Certificate.new_stake_registration(a.C.StakeRegistration.new(s)),void 0)})),this}deregisterStake(e,t){return this.tasks.push((r=>{const s=r.lucid.utils.getAddressDetails(e);if("Reward"!==s.type||!s.stakeCredential)throw new Error("Not a reward address provided.");const i="Key"===s.stakeCredential.type?a.C.StakeCredential.from_keyhash(a.C.Ed25519KeyHash.from_bytes((0,n.H_)(s.stakeCredential.hash))):a.C.StakeCredential.from_scripthash(a.C.ScriptHash.from_bytes((0,n.H_)(s.stakeCredential.hash)));r.txBuilder.add_certificate(a.C.Certificate.new_stake_deregistration(a.C.StakeDeregistration.new(i)),t?a.C.ScriptWitness.new_plutus_witness(a.C.PlutusWitness.new(a.C.PlutusData.from_bytes((0,n.H_)(t)),void 0,void 0)):void 0)})),this}registerPool(e){return this.tasks.push((async t=>{const r=await d(e,t.lucid),s=a.C.Certificate.new_pool_registration(r);t.txBuilder.add_certificate(s,void 0)})),this}updatePool(e){return this.tasks.push((async t=>{const r=await d(e,t.lucid);r.set_is_update(!0);const s=a.C.Certificate.new_pool_registration(r);t.txBuilder.add_certificate(s,void 0)})),this}retirePool(e,t){return this.tasks.push((r=>{const s=a.C.Certificate.new_pool_retirement(a.C.PoolRetirement.new(a.C.Ed25519KeyHash.from_bech32(e),t));r.txBuilder.add_certificate(s,void 0)})),this}withdraw(e,t,r){return this.tasks.push((s=>{s.txBuilder.add_withdrawal(a.C.RewardAddress.from_address(h(e,s.lucid)),a.C.BigNum.from_str(t.toString()),r?a.C.ScriptWitness.new_plutus_witness(a.C.PlutusWitness.new(a.C.PlutusData.from_bytes((0,n.H_)(r)),void 0,void 0)):void 0)})),this}addSigner(e){const t=this.lucid.utils.getAddressDetails(e);if(!t.paymentCredential&&!t.stakeCredential)throw new Error("Not a valid address.");const r="Reward"===t.type?t.stakeCredential:t.paymentCredential;if("Script"===r.type)throw new Error("Only key hashes are allowed as signers.");return this.addSignerKey(r.hash)}addSignerKey(e){return this.tasks.push((t=>{t.txBuilder.add_required_signer(a.C.Ed25519KeyHash.from_bytes((0,n.H_)(e)))})),this}validFrom(e){return this.tasks.push((t=>{const r=t.lucid.utils.unixTimeToSlot(e);t.txBuilder.set_validity_start_interval(a.C.BigNum.from_str(r.toString()))})),this}validTo(e){return this.tasks.push((t=>{const r=t.lucid.utils.unixTimeToSlot(e);t.txBuilder.set_ttl(a.C.BigNum.from_str(r.toString()))})),this}attachMetadata(e,t){return this.tasks.push((r=>{r.txBuilder.add_json_metadatum(a.C.BigNum.from_str(e.toString()),JSON.stringify(t))})),this}attachMetadataWithConversion(e,t){return this.tasks.push((r=>{r.txBuilder.add_json_metadatum_with_schema(a.C.BigNum.from_str(e.toString()),JSON.stringify(t),a.C.MetadataJsonSchema.BasicConversions)})),this}addNetworkId(e){return this.tasks.push((t=>{t.txBuilder.set_network_id(a.C.NetworkId.from_bytes((0,n.H_)(e.toString(16).padStart(2,"0"))))})),this}attachSpendingValidator(e){return this.tasks.push((t=>{l(t,e)})),this}attachMintingPolicy(e){return this.tasks.push((t=>{l(t,e)})),this}attachCertificateValidator(e){return this.tasks.push((t=>{l(t,e)})),this}attachWithdrawalValidator(e){return this.tasks.push((t=>{l(t,e)})),this}compose(e){return e&&(this.tasks=this.tasks.concat(e.tasks)),this}async complete(e){if([e?.change?.outputData?.hash,e?.change?.outputData?.asHash,e?.change?.outputData?.inline].filter((e=>e)).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");let t=this.tasks.shift();for(;t;)await t(this),t=this.tasks.shift();const r=await this.lucid.wallet.getUtxosCore(),s=h(e?.change?.address||await this.lucid.wallet.address(),this.lucid);return(e?.coinSelection||void 0===e?.coinSelection)&&this.txBuilder.add_inputs_from(r,s),this.txBuilder.balance(s,(()=>e?.change?.outputData?.hash?a.C.Datum.new_data_hash(a.C.DataHash.from_hex(e.change.outputData.hash)):e?.change?.outputData?.asHash?(this.txBuilder.add_plutus_data(a.C.PlutusData.from_bytes((0,n.H_)(e.change.outputData.asHash))),a.C.Datum.new_data_hash(a.C.hash_plutus_data(a.C.PlutusData.from_bytes((0,n.H_)(e.change.outputData.asHash))))):e?.change?.outputData?.inline?a.C.Datum.new_data(a.C.Data.new(a.C.PlutusData.from_bytes((0,n.H_)(e.change.outputData.inline)))):void 0)()),new o.u(this.lucid,await this.txBuilder.construct(r,s,void 0===e?.nativeUplc||e?.nativeUplc))}async toString(){let e=this.tasks.shift();for(;e;)await e(this),e=this.tasks.shift();return(0,n.NC)(this.txBuilder.to_bytes())}}function l(e,{type:t,script:r}){if("Native"===t)return e.txBuilder.add_native_script(a.C.NativeScript.from_bytes((0,n.H_)(r)));if("PlutusV1"===t)return e.txBuilder.add_plutus_script(a.C.PlutusScript.from_bytes((0,n.H_)((0,i.EE)(r))));if("PlutusV2"===t)return e.txBuilder.add_plutus_v2_script(a.C.PlutusScript.from_bytes((0,n.H_)((0,i.EE)(r))));throw new Error("No variant matched.")}async function d(e,t){const r=a.C.Ed25519KeyHashes.new();e.owners.forEach((e=>{const{stakeCredential:s}=t.utils.getAddressDetails(e);if("Key"!==s?.type)throw new Error("Only key hashes allowed for pool owners.");r.add(a.C.Ed25519KeyHash.from_hex(s.hash))}));const s=e.metadataUrl?await fetch(e.metadataUrl).then((e=>e.arrayBuffer())):null,i=s?a.C.PoolMetadataHash.from_bytes(a.C.hash_blake2b256(new Uint8Array(s))):null,o=a.C.Relays.new();return e.relays.forEach((e=>{switch(e.type){case"SingleHostIp":{const t=e.ipV4?a.C.Ipv4.new(new Uint8Array(e.ipV4.split(".").map((e=>parseInt(e))))):void 0,r=e.ipV6?a.C.Ipv6.new((0,n.H_)(e.ipV6.replaceAll(":",""))):void 0;o.add(a.C.Relay.new_single_host_addr(a.C.SingleHostAddr.new(e.port,t,r)));break}case"SingleHostDomainName":o.add(a.C.Relay.new_single_host_name(a.C.SingleHostName.new(e.port,a.C.DNSRecordAorAAAA.new(e.domainName))));break;case"MultiHost":o.add(a.C.Relay.new_multi_host_name(a.C.MultiHostName.new(a.C.DNSRecordSRV.new(e.domainName))))}})),a.C.PoolRegistration.new(a.C.PoolParams.new(a.C.Ed25519KeyHash.from_bech32(e.poolId),a.C.VRFKeyHash.from_hex(e.vrfKeyHash),a.C.BigNum.from_str(e.pledge.toString()),a.C.BigNum.from_str(e.cost.toString()),a.C.UnitInterval.from_float(e.margin),a.C.RewardAddress.from_address(h(e.rewardAddress,t)),r,o,i?a.C.PoolMetadata.new(a.C.URL.new(e.metadataUrl),i):void 0))}function h(e,t){const r=t.utils.getAddressDetails(e),s=(0,n.dZ)(t.network);if(r.networkId!==s)throw new Error(`Invalid address: Expected address with network id ${s}, but got ${r.networkId}`);return a.C.Address.from_bech32(e)}s()}catch(m){s(m)}}))},676:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{u:()=>u});var a=r(609),n=r(866),i=r(483),o=e([a,n,i]);[a,n,i]=o.then?(await o)():o;class u{constructor(e,t){Object.defineProperty(this,"txComplete",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"witnessSetBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.txComplete=t,this.witnessSetBuilder=a.C.TransactionWitnessSetBuilder.new(),this.tasks=[]}sign(){return this.tasks.push((async()=>{const e=await this.lucid.wallet.signTx(this.txComplete);this.witnessSetBuilder.add_existing(e)})),this}signWithPrivateKey(e){const t=a.C.PrivateKey.from_bech32(e),r=a.C.make_vkey_witness(a.C.hash_transaction(this.txComplete.body()),t);return this.witnessSetBuilder.add_vkey(r),this}async partialSign(){const e=await this.lucid.wallet.signTx(this.txComplete);return this.witnessSetBuilder.add_existing(e),(0,i.NC)(e.to_bytes())}partialSignWithPrivateKey(e){const t=a.C.PrivateKey.from_bech32(e),r=a.C.make_vkey_witness(a.C.hash_transaction(this.txComplete.body()),t);this.witnessSetBuilder.add_vkey(r);const s=a.C.TransactionWitnessSetBuilder.new();return s.add_vkey(r),(0,i.NC)(s.build().to_bytes())}assemble(e){return e.forEach((e=>{const t=a.C.TransactionWitnessSet.from_bytes((0,i.H_)(e));this.witnessSetBuilder.add_existing(t)})),this}async complete(){for(const e of this.tasks)await e();this.witnessSetBuilder.add_existing(this.txComplete.witness_set());const e=a.C.Transaction.new(this.txComplete.body(),this.witnessSetBuilder.build(),this.txComplete.auxiliary_data());return new n.v(this.lucid,e)}toString(){return(0,i.NC)(this.txComplete.to_bytes())}toHash(){return a.C.hash_transaction(this.txComplete.body()).to_hex()}}s()}catch(e){s(e)}}))},866:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{v:()=>o});var a=r(609),n=r(483),i=e([a,n]);[a,n]=i.then?(await i)():i;class o{constructor(e,t){Object.defineProperty(this,"txSigned",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.txSigned=t}async submit(){return await(this.lucid.wallet||this.lucid.provider).submitTx((0,n.NC)(this.txSigned.to_bytes()))}toString(){return(0,n.NC)(this.txSigned.to_bytes())}toHash(){return a.C.hash_transaction(this.txSigned.body()).to_hex()}}s()}catch(e){s(e)}}))},774:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{O:()=>m,o:()=>d});var a=r(246),n=r(483),i=e([n]);n=(i.then?(await i)():i)[0];const o="Invalid mnemonic",u="Invalid entropy",c="Invalid mnemonic checksum",l="A wordlist is required but a default could not be found.\nPlease pass a 2048 word array explicitly.";function d(e,t){if(!(t=t||b))throw new Error(l);const r=(s=e,(s||"").normalize("NFKD")).split(" ");var s;if(r.length%3!=0)throw new Error(o);const a=r.map((e=>{const r=t.indexOf(e);if(-1===r)throw new Error(o);return y(r.toString(2),"0",11)})).join(""),i=32*Math.floor(a.length/33),d=a.slice(0,i),h=a.slice(i),m=d.match(/(.{1,8})/g).map(w);if(m.length<16)throw new Error(u);if(m.length>32)throw new Error(u);if(m.length%4!=0)throw new Error(u);const p=new Uint8Array(m);if(g(p)!==h)throw new Error(c);return(0,n.NC)(p)}function h(e){const t=65536,r=new Uint8Array(e);if(e>4294967295)throw new RangeError("requested too many random bytes");if(e>0)if(e>t)for(let s=0;s<e;s+=t)crypto.getRandomValues(r.slice(s,s+t));else crypto.getRandomValues(r);return r}function m(e,t,r){if((e=e||128)%32!=0)throw new TypeError(u);return p((t=t||h)(e/8),r)}function p(e,t){if(!(t=t||b))throw new Error(l);if(e.length<16)throw new TypeError(u);if(e.length>32)throw new TypeError(u);if(e.length%4!=0)throw new TypeError(u);const r=(f(Array.from(e))+g(e)).match(/(.{1,11})/g).map((e=>{const r=w(e);return t[r]}));return"あいこくしん"===t[0]?r.join("　"):r.join(" ")}function g(e){const t=8*e.length/32,r=(new a.f).update(e).digest();return f(Array.from(r)).slice(0,t)}function y(e,t,r){for(;e.length<r;)e=t+e;return e}function f(e){return e.map((e=>y(e.toString(2),"0",8))).join("")}function w(e){return parseInt(e,2)}const b=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];s()}catch(_){s(_)}}))},398:(e,t,r)=>{r.d(t,{t:()=>a});let s=[0,7,14,9,28,27,18,21,56,63,54,49,36,35,42,45,112,119,126,121,108,107,98,101,72,79,70,65,84,83,90,93,224,231,238,233,252,251,242,245,216,223,214,209,196,195,202,205,144,151,158,153,140,139,130,133,168,175,166,161,180,179,186,189,199,192,201,206,219,220,213,210,255,248,241,246,227,228,237,234,183,176,185,190,171,172,165,162,143,136,129,134,147,148,157,154,39,32,41,46,59,60,53,50,31,24,17,22,3,4,13,10,87,80,89,94,75,76,69,66,111,104,97,102,115,116,125,122,137,142,135,128,149,146,155,156,177,182,191,184,173,170,163,164,249,254,247,240,229,226,235,236,193,198,207,200,221,218,211,212,105,110,103,96,117,114,123,124,81,86,95,88,77,74,67,68,25,30,23,16,5,2,11,12,33,38,47,40,61,58,51,52,78,73,64,71,82,85,92,91,118,113,120,127,106,109,100,99,62,57,48,55,34,37,44,43,6,1,8,15,26,29,20,19,174,169,160,167,178,181,188,187,150,145,152,159,138,141,132,131,222,217,208,215,194,197,204,203,230,225,232,239,250,253,244,243];function a(e,t=0){let r=~~t;for(let t=0;t<e.length;t++)r=255&s[255&(r^e[t])];return r}"undefined"!=typeof Int32Array&&(s=new Int32Array(s))},771:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{_:()=>o,r:()=>i});var a=r(380),n=e([a]);function i(e,t,r){const s=a.M.HeaderMap.new();s.set_algorithm_id(a.M.Label.from_algorithm_id(a.M.AlgorithmId.EdDSA)),s.set_header(a.M.Label.new_text("address"),a.M.CBORValue.new_bytes((0,a.H_)(e)));const n=a.M.ProtectedHeaderMap.new(s),i=a.M.HeaderMap.new(),o=a.M.Headers.new(n,i),u=a.M.COSESign1Builder.new(o,(0,a.H_)(t),!1),c=u.make_data_to_sign().to_bytes(),l=a.C.PrivateKey.from_bech32(r),d=l.sign(c).to_bytes(),h=u.build(d),m=a.M.COSEKey.new(a.M.Label.from_key_type(a.M.KeyType.OKP));return m.set_algorithm_id(a.M.Label.from_algorithm_id(a.M.AlgorithmId.EdDSA)),m.set_header(a.M.Label.new_int(a.M.Int.new_negative(a.M.BigNum.from_str("1"))),a.M.CBORValue.new_int(a.M.Int.new_i32(6))),m.set_header(a.M.Label.new_int(a.M.Int.new_negative(a.M.BigNum.from_str("2"))),a.M.CBORValue.new_bytes(l.to_public().as_bytes())),{signature:(0,a.NC)(h.to_bytes()),key:(0,a.NC)(m.to_bytes())}}function o(e,t,r,s){const n=a.M.COSESign1.from_bytes((0,a.H_)(s.signature)),i=a.M.COSEKey.from_bytes((0,a.H_)(s.key)),o=n.headers().protected().deserialized_headers(),u=(()=>{try{return(0,a.NC)(o.header(a.M.Label.new_text("address"))?.as_bytes())}catch(e){throw new Error("No address found in signature.")}})(),c=(()=>{try{const e=o.algorithm_id()?.as_int();return e?.is_positive()?parseInt(e.as_positive()?.to_str()):parseInt(e?.as_negative()?.to_str())}catch(e){throw new Error("Failed to retrieve Algorithm Id.")}})(),l=(()=>{try{const e=i.algorithm_id()?.as_int();return e?.is_positive()?parseInt(e.as_positive()?.to_str()):parseInt(e?.as_negative()?.to_str())}catch(e){throw new Error("Failed to retrieve Algorithm Id.")}})(),d=(()=>{try{const e=i.header(a.M.Label.new_int(a.M.Int.new_negative(a.M.BigNum.from_str("1"))))?.as_int();return e?.is_positive()?parseInt(e.as_positive()?.to_str()):parseInt(e?.as_negative()?.to_str())}catch(e){throw new Error("Failed to retrieve Curve.")}})(),h=(()=>{try{const e=i.key_type().as_int();return e?.is_positive()?parseInt(e.as_positive()?.to_str()):parseInt(e?.as_negative()?.to_str())}catch(e){throw new Error("Failed to retrieve Key Type.")}})(),m=(()=>{try{return a.C.PublicKey.from_bytes(i.header(a.M.Label.new_int(a.M.Int.new_negative(a.M.BigNum.from_str("2"))))?.as_bytes())}catch(e){throw new Error("No public key found.")}})(),p=(()=>{try{return(0,a.NC)(n.payload())}catch(e){throw new Error("No payload found.")}})(),g=a.C.Ed25519Signature.from_bytes(n.signature()),y=n.signed_data(void 0,void 0).to_bytes();return u===e&&t===m.hash().to_hex()&&(c===l||c===a.M.AlgorithmId.EdDSA)&&6===d&&1===h&&p===r&&m.verify(y,g)}a=(n.then?(await n)():n)[0],s()}catch(u){s(u)}}))},145:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{W:()=>u,n:()=>o});var a=r(380),n=r(774),i=e([a,n]);function o(e,t={addressType:"Base",accountIndex:0,network:"Mainnet"}){function r(e){if("number"!=typeof e)throw new Error("Type number required here!");return 2147483648+e}const s=(0,n.o)(e),i=a.C.Bip32PrivateKey.from_bip39_entropy((0,a.H_)(s),t.password?(new TextEncoder).encode(t.password):new Uint8Array).derive(r(1852)).derive(r(1815)).derive(r(t.accountIndex)),o=i.derive(0).derive(0).to_raw_key(),u=i.derive(2).derive(0).to_raw_key(),c=o.to_public().hash(),l=u.to_public().hash(),d="Mainnet"===t.network?1:0;return{address:"Base"===t.addressType?a.C.BaseAddress.new(d,a.C.StakeCredential.from_keyhash(c),a.C.StakeCredential.from_keyhash(l)).to_address().to_bech32(void 0):a.C.EnterpriseAddress.new(d,a.C.StakeCredential.from_keyhash(c)).to_address().to_bech32(void 0),rewardAddress:"Base"===t.addressType?a.C.RewardAddress.new(d,a.C.StakeCredential.from_keyhash(l)).to_address().to_bech32(void 0):null,paymentKey:o.to_bech32(),stakeKey:"Base"===t.addressType?u.to_bech32():null}}function u(e,t,r){const s=[],n=e.body().inputs();for(let e=0;e<n.len();e++){const t=n.get(e),i=(0,a.NC)(t.transaction_id().to_bytes()),o=parseInt(t.index().to_str()),u=r.find((e=>e.txHash===i&&e.outputIndex===o));if(u){const{paymentCredential:e}=(0,a.IL)(u.address);s.push(e?.hash)}}const i=e.body();i.certs()&&function(e){const t=e.certs();if(t)for(let e=0;e<t.len();e++){const r=t.get(e);if(0===r.kind()){const e=r.as_stake_registration()?.stake_credential();e?.kind()}else if(1===r.kind()){const e=r.as_stake_deregistration()?.stake_credential();if(0===e?.kind()){const t=(0,a.NC)(e.to_keyhash().to_bytes());s.push(t)}}else if(2===r.kind()){const e=r.as_stake_delegation()?.stake_credential();if(0===e?.kind()){const t=(0,a.NC)(e.to_keyhash().to_bytes());s.push(t)}}else if(3===r.kind()){const e=r.as_pool_registration()?.pool_params(),t=e?.pool_owners();if(!t)break;for(let e=0;e<t.len();e++){const r=(0,a.NC)(t.get(e).to_bytes());s.push(r)}const n=e.operator().to_hex();s.push(n)}else if(4===r.kind()){const e=r.as_pool_retirement().pool_keyhash().to_hex();s.push(e)}else if(6===r.kind()){const e=r.as_move_instantaneous_rewards_cert()?.move_instantaneous_reward().as_to_stake_creds()?.keys();if(!e)break;for(let t=0;t<e.len();t++){const r=e.get(t);if(0===r.kind()){const e=(0,a.NC)(r.to_keyhash().to_bytes());s.push(e)}}}}}(i);const o=i.withdrawals();o&&function(e){const t=e.keys();for(let e=0;e<t.len();e++){const r=t.get(e).payment_cred();0===r.kind()&&s.push(r.to_keyhash().to_hex())}}(o);const u=e.witness_set().native_scripts();u&&function e(t){for(let r=0;r<t.len();r++){const n=t.get(r);if(0===n.kind()){const e=(0,a.NC)(n.as_script_pubkey().addr_keyhash().to_bytes());s.push(e)}if(1===n.kind())return void e(n.as_script_all().native_scripts());if(2===n.kind())return void e(n.as_script_any().native_scripts());if(3===n.kind())return void e(n.as_script_n_of_k().native_scripts())}}(u);const c=i.required_signers();if(c)for(let e=0;e<c.len();e++)s.push((0,a.NC)(c.get(e).to_bytes()));const l=i.collateral();if(l)for(let e=0;e<l.len();e++){const t=l.get(e),n=(0,a.NC)(t.transaction_id().to_bytes()),i=parseInt(t.index().to_str()),o=r.find((e=>e.txHash===n&&e.outputIndex===i));if(o){const{paymentCredential:e}=(0,a.IL)(o.address);s.push(e?.hash)}}return s.filter((e=>t.includes(e)))}[a,n]=i.then?(await i)():i,s()}catch(c){s(c)}}))},380:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{C:()=>a.C,H_:()=>o.H_,IL:()=>o.IL,M:()=>a.M,NC:()=>o.NC,Oo:()=>i.Oo,_k:()=>n._k});var a=r(609),n=r(669),i=r(347),o=r(483),u=r(766),c=e([a,n,i,o,u]);[a,n,i,o,u]=c.then?(await c)():c,s()}catch(e){s(e)}}))},611:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{V:()=>c});var a=r(384),n=r(609),i=r(65),o=e([n,i]);[n,i]=o.then?(await o)():o;class u{constructor(e,t){Object.defineProperty(this,"index",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"fields",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.index=e,this.fields=t}}const c={Integer:function(e){const t=a.Dy.Unsafe({dataType:"integer"});return e&&Object.entries(e).forEach((([e,r])=>{t[e]=r})),t},Bytes:function(e){const t=a.Dy.Unsafe({dataType:"bytes"});return e&&Object.entries(e).forEach((([e,r])=>{t[e]=r})),t},Boolean:function(){return a.Dy.Unsafe({anyOf:[{title:"False",dataType:"constructor",index:0,fields:[]},{title:"True",dataType:"constructor",index:1,fields:[]}]})},Any:function(){return a.Dy.Unsafe({description:"Any Data."})},Array:function(e,t){const r=a.Dy.Array(e);return v(r,{dataType:"list",items:e}),t&&Object.entries(t).forEach((([e,t])=>{r[e]=t})),r},Map:function(e,t,r){const s=a.Dy.Unsafe({dataType:"map",keys:e,values:t});return r&&Object.entries(r).forEach((([e,t])=>{s[e]=t})),s},Object:function(e,t){const r=a.Dy.Object(e);return v(r,{anyOf:[{dataType:"constructor",index:0,fields:Object.entries(e).map((([e,t])=>({...t,title:e})))}]}),r.anyOf[0].hasConstr=void 0===t?.hasConstr||t.hasConstr,r},Enum:function(e){const t=a.Dy.Union(e);return v(t,{anyOf:e.map(((e,t)=>0===e.anyOf[0].fields.length?{...e.anyOf[0],index:t}:{dataType:"constructor",title:(()=>{const t=e.anyOf[0].fields[0].title;if(t.charAt(0)!==t.charAt(0).toUpperCase())throw new Error(`Enum '${t}' needs to start with an uppercase letter.`);return e.anyOf[0].fields[0].title})(),index:t,fields:e.anyOf[0].fields[0].items}))}),t},Tuple:function(e,t){const r=a.Dy.Tuple(e);return v(r,{dataType:"list",items:e}),t&&Object.entries(t).forEach((([e,t])=>{r[e]=t})),r},Literal:function(e){if(e.charAt(0)!==e.charAt(0).toUpperCase())throw new Error(`Enum '${e}' needs to start with an uppercase letter.`);const t=a.Dy.Literal(e);return v(t,{anyOf:[{dataType:"constructor",title:e,index:0,fields:[]}]}),t},Nullable:function(e){return a.Dy.Unsafe({anyOf:[{title:"Some",description:"An optional value.",dataType:"constructor",index:0,fields:[e]},{title:"None",description:"Nothing.",dataType:"constructor",index:1,fields:[]}]})},to:l,from:d,fromJson:h,toJson:m,void:function(){return"d87980"},castFrom:p,castTo:g};function l(e,t){const r=t?g(e,t):e;return(0,i.NC)(function e(t){try{if("bigint"==typeof t)return n.C.PlutusData.new_integer(n.C.BigInt.from_str(t.toString()));if("string"==typeof t)return n.C.PlutusData.new_bytes((0,i.H_)(t));if(t instanceof u){const{index:r,fields:s}=t,a=n.C.PlutusList.new();return s.forEach((t=>a.add(e(t)))),n.C.PlutusData.new_constr_plutus_data(n.C.ConstrPlutusData.new(n.C.BigNum.from_str(r.toString()),a))}if(t instanceof Array){const r=n.C.PlutusList.new();return t.forEach((t=>r.add(e(t)))),n.C.PlutusData.new_list(r)}if(t instanceof Map){const r=n.C.PlutusMap.new();for(const[s,a]of t.entries())r.insert(e(s),e(a));return n.C.PlutusData.new_map(r)}throw new Error("Unsupported type")}catch(e){throw new Error("Could not serialize the data: "+e)}}(r).to_bytes())}function d(e,t){const r=function e(t){if(0===t.kind()){const r=t.as_constr_plutus_data(),s=r.data(),a=[];for(let t=0;t<s.len();t++)a.push(e(s.get(t)));return new u(parseInt(r.alternative().to_str()),a)}if(1===t.kind()){const r=t.as_map(),s=new Map,a=r.keys();for(let t=0;t<a.len();t++)s.set(e(a.get(t)),e(r.get(a.get(t))));return s}if(2===t.kind()){const r=t.as_list(),s=[];for(let t=0;t<r.len();t++)s.push(e(r.get(t)));return s}if(3===t.kind())return BigInt(t.as_integer().to_str());if(4===t.kind())return(0,i.NC)(t.as_bytes());throw new Error("Unsupported type")}(n.C.PlutusData.from_bytes((0,i.H_)(e)));return t?p(r,t):r}function h(e){return function e(t){if("string"==typeof t)return t.startsWith("0x")?(0,i.NC)((0,i.H_)(t.slice(2))):(0,i.t1)(t);if("number"==typeof t)return BigInt(t);if("bigint"==typeof t)return t;if(t instanceof Array)return t.map((t=>e(t)));if(t instanceof Object){const r=new Map;return Object.entries(t).forEach((([t,s])=>{r.set(e(t),e(s))})),r}throw new Error("Unsupported type")}(e)}function m(e){return function e(t){if("bigint"==typeof t||"number"==typeof t||"string"==typeof t&&!isNaN(parseInt(t))&&"n"===t.slice(-1)){const e="string"==typeof t?BigInt(t.slice(0,-1)):t;return parseInt(e.toString())}if("string"==typeof t)try{return new TextDecoder(void 0,{fatal:!0}).decode((0,i.H_)(t))}catch(e){return"0x"+(0,i.NC)((0,i.H_)(t))}if(t instanceof Array)return t.map((t=>e(t)));if(t instanceof Map){const r={};return t.forEach(((t,s)=>{const a=e(s);if("string"!=typeof a&&"number"!=typeof a)throw new Error("Unsupported type (Note: Only bytes or integers can be keys of a JSON object)");r[a]=e(t)})),r}throw new Error("Unsupported type (Note: Constructor cannot be converted to JSON)")}(e)}function p(e,t){if(!t)throw new Error("Could not type cast data.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":if("bigint"!=typeof e)throw new Error("Could not type cast to integer.");return y(e,t),e;case"bytes":if("string"!=typeof e)throw new Error("Could not type cast to bytes.");return f(e,t),e;case"constructor":if(e instanceof u&&e.index===t.index&&(t.hasConstr||void 0===t.hasConstr)){const r={};if(t.fields.length!==e.fields.length)throw new Error("Could not ype cast to object. Fields do not match.");return t.fields.forEach(((t,s)=>{if(/[A-Z]/.test(t.title[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");r[t.title]=p(e.fields[s],t)})),r}if(e instanceof Array&&!t.hasConstr&&void 0!==t.hasConstr){const r={};if(t.fields.length!==e.length)throw new Error("Could not ype cast to object. Fields do not match.");return t.fields.forEach(((t,s)=>{if(/[A-Z]/.test(t.title[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");r[t.title]=p(e[s],t)})),r}throw new Error("Could not type cast to object.");case"enum":{if(1===t.anyOf.length)return p(e,t.anyOf[0]);if(!(e instanceof u))throw new Error("Could not type cast to enum.");const r=t.anyOf.find((t=>t.index===e.index));if(!r||r.fields.length!==e.fields.length)throw new Error("Could not type cast to enum.");if(_(t)){if(0!==e.fields.length)throw new Error("Could not type cast to boolean.");switch(e.index){case 0:return!1;case 1:return!0}throw new Error("Could not type cast to boolean.")}if(C(t)){switch(e.index){case 0:if(1!==e.fields.length)throw new Error("Could not type cast to nullable object.");return p(e.fields[0],t.anyOf[0].fields[0]);case 1:if(0!==e.fields.length)throw new Error("Could not type cast to nullable object.");return null}throw new Error("Could not type cast to nullable object.")}if("constructor"===r.dataType){if(0===r.fields.length){if(/[A-Z]/.test(r.title[0]))return r.title;throw new Error("Could not type cast to enum.")}if(!/[A-Z]/.test(r.title))throw new Error("Could not type cast to enum. Enums need to start with an uppercase letter.");if(r.fields.length!==e.fields.length)throw new Error("Could not type cast to enum.");return{[r.title]:r.fields.map(((t,r)=>p(e.fields[r],t)))}}throw new Error("Could not type cast to enum.")}case"list":if(t.items instanceof Array){if(e instanceof u&&0===e.index&&t.hasConstr)return e.fields.map(((e,r)=>p(e,t.items[r])));if(e instanceof Array&&!t.hasConstr)return e.map(((e,r)=>p(e,t.items[r])));throw new Error("Could not type cast to tuple.")}if(!(e instanceof Array))throw new Error("Could not type cast to array.");return w(e,t),e.map((e=>p(e,t.items)));case"map":{if(!(e instanceof Map))throw new Error("Could not type cast to map.");b(e,t);const r=new Map;for(const[s,a]of e.entries())r.set(p(s,t.keys),p(a,t.values));return r}case void 0:return e}throw new Error("Could not type cast data.")}function g(e,t){if(!t)throw new Error("Could not type cast struct.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":if("bigint"!=typeof e)throw new Error("Could not type cast to integer.");return y(e,t),e;case"bytes":if("string"!=typeof e)throw new Error("Could not type cast to bytes.");return f(e,t),e;case"constructor":{if("object"!=typeof e||null===e)throw new Error("Could not type cast to constructor.");const r=t.fields.map((t=>g(e[t.title],t)));return t.hasConstr||void 0===t.hasConstr?new u(t.index,r):r}case"enum":if(1===t.anyOf.length)return g(e,t.anyOf[0]);if(_(t)){if("boolean"!=typeof e)throw new Error("Could not type cast to boolean.");return new u(e?1:0,[])}if(C(t)){if(null===e)return new u(1,[]);{const r=t.anyOf[0].fields;if(1!==r.length)throw new Error("Could not type cast to nullable object.");return new u(0,[g(e,r[0])])}}switch(typeof e){case"string":{if(!/[A-Z]/.test(e[0]))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");const r=t.anyOf.findIndex((t=>"constructor"===t.dataType&&0===t.fields.length&&t.title===e));if(-1===r)throw new Error("Could not type cast to enum.");return new u(r,[])}case"object":{if(null===e)throw new Error("Could not type cast to enum.");const r=Object.keys(e)[0];if(!/[A-Z]/.test(r))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");const s=t.anyOf.find((e=>"constructor"===e.dataType&&e.title===r));if(!s)throw new Error("Could not type cast to enum.");return new u(s.index,e[r].map(((e,t)=>g(e,s.fields[t]))))}}throw new Error("Could not type cast to enum.");case"list":if(!(e instanceof Array))throw new Error("Could not type cast to array/tuple.");if(t.items instanceof Array){const r=e.map(((e,r)=>g(e,t.items[r])));return t.hasConstr?new u(0,r):r}return w(e,t),e.map((e=>g(e,t.items)));case"map":{if(!(e instanceof Map))throw new Error("Could not type cast to map.");b(e,t);const r=new Map;for(const[s,a]of e.entries())r.set(g(s,t.keys),g(a,t.values));return r}case void 0:return e}throw new Error("Could not type cast struct.")}function y(e,t){if(t.minimum&&e<BigInt(t.minimum))throw new Error(`Integer ${e} is below the minimum ${t.minimum}.`);if(t.maximum&&e>BigInt(t.maximum))throw new Error(`Integer ${e} is above the maxiumum ${t.maximum}.`);if(t.exclusiveMinimum&&e<=BigInt(t.exclusiveMinimum))throw new Error(`Integer ${e} is below the exclusive minimum ${t.exclusiveMinimum}.`);if(t.exclusiveMaximum&&e>=BigInt(t.exclusiveMaximum))throw new Error(`Integer ${e} is above the exclusive maximum ${t.exclusiveMaximum}.`)}function f(e,t){if(t.enum&&!t.enum.some((t=>t===e)))throw new Error(`None of the keywords match with '${e}'.`);if(t.minLength&&e.length/2<t.minLength)throw new Error(`Bytes need to have a length of at least ${t.minLength} bytes.`);if(t.maxLength&&e.length/2>t.maxLength)throw new Error(`Bytes can have a length of at most ${t.minLength} bytes.`)}function w(e,t){if(t.minItems&&e.length<t.minItems)throw new Error(`Array needs to contain at least ${t.minItems} items.`);if(t.maxItems&&e.length>t.maxItems)throw new Error(`Array can contain at most ${t.maxItems} items.`);if(t.uniqueItems&&new Set(e).size!==e.length)throw new Error("Array constains duplicates.")}function b(e,t){if(t.minItems&&e.size<t.minItems)throw new Error(`Map needs to contain at least ${t.minItems} items.`);if(t.maxItems&&e.size>t.maxItems)throw new Error(`Map can contain at most ${t.maxItems} items.`)}function _(e){return e.anyOf&&"False"===e.anyOf[0]?.title&&"True"===e.anyOf[1]?.title}function C(e){return e.anyOf&&"Some"===e.anyOf[0]?.title&&"None"===e.anyOf[1]?.title}function v(e,t){Object.keys(e).forEach((t=>{delete e[t]})),Object.assign(e,t)}s()}catch(k){s(k)}}))},766:(e,t,r)=>{r.a(e,(async(e,t)=>{try{var s=r(611),a=(r(271),e([s]));s=(a.then?(await a)():a)[0],t()}catch(e){t(e)}}))},271:(e,t,r)=>{r.d(t,{BV:()=>s,WN:()=>n,cM:()=>a});const s={Mainnet:{zeroTime:1596059091e3,zeroSlot:4492800,slotLength:1e3},Preview:{zeroTime:1666656e6,zeroSlot:0,slotLength:1e3},Preprod:{zeroTime:16557696e5,zeroSlot:86400,slotLength:1e3},Custom:{zeroTime:0,zeroSlot:0,slotLength:0}};function a(e,t){const r=(e-t.zeroSlot)*t.slotLength;return t.zeroTime+r}function n(e,t){const r=e-t.zeroTime;return Math.floor(r/t.slotLength)+t.zeroSlot}},307:(e,t,r)=>{r.a(e,(async(e,t)=>{try{var s=r(609),a=r(483),n=r(110),i=e([s,a]);[s,a]=i.then?(await i)():i,n.Z.version,t()}catch(e){t(e)}}))},802:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{G:()=>u});var a=r(812),n=r(483),i=r(65),o=e([a,n,i]);[a,n,i]=o.then?(await o)():o;class u{constructor(e,t=n.DV){Object.defineProperty(this,"ledger",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"mempool",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"chain",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"blockHeight",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"slot",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"time",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"protocolParameters",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"datumTable",{enumerable:!0,configurable:!0,writable:!0,value:{}});const r="00".repeat(32);this.blockHeight=0,this.slot=0,this.time=Date.now(),this.ledger={},e.forEach((({address:e,assets:t},s)=>{this.ledger[r+s]={utxo:{txHash:r,outputIndex:s,address:e,assets:t},spent:!1}})),this.protocolParameters=t}now(){return this.time}awaitSlot(e=1){this.slot+=e,this.time+=1e3*e;const t=this.blockHeight;if(this.blockHeight=Math.floor(this.slot/20),this.blockHeight>t){for(const[e,{utxo:t,spent:r}]of Object.entries(this.mempool))this.ledger[e]={utxo:t,spent:r};for(const[e,{spent:t}]of Object.entries(this.ledger))t&&delete this.ledger[e];this.mempool={}}}awaitBlock(e=1){this.blockHeight+=e,this.slot+=20*e,this.time+=20*e*1e3;for(const[e,{utxo:t,spent:r}]of Object.entries(this.mempool))this.ledger[e]={utxo:t,spent:r};for(const[e,{spent:t}]of Object.entries(this.ledger))t&&delete this.ledger[e];this.mempool={}}getUtxos(e){const t=Object.values(this.ledger).flatMap((({utxo:t})=>{if("string"==typeof e)return e===t.address?t:[];{const{paymentCredential:r}=(0,i.IL)(t.address);return r?.hash===e.hash?t:[]}}));return Promise.resolve(t)}getProtocolParameters(){return Promise.resolve(this.protocolParameters)}getDatum(e){return Promise.resolve(this.datumTable[e])}getUtxosWithUnit(e,t){const r=Object.values(this.ledger).flatMap((({utxo:r})=>{if("string"==typeof e)return e===r.address&&r.assets[t]>0n?r:[];{const{paymentCredential:s}=(0,i.IL)(r.address);return s?.hash===e.hash&&r.assets[t]>0n?r:[]}}));return Promise.resolve(r)}getUtxosByOutRef(e){return Promise.resolve(e.flatMap((e=>this.ledger[e.txHash+e.outputIndex]?.utxo||[])))}getUtxoByUnit(e){const t=Object.values(this.ledger).flatMap((({utxo:t})=>t.assets[e]>0n?t:[]));if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return Promise.resolve(t[0])}getDelegation(e){return Promise.resolve({poolId:this.chain[e]?.delegation?.poolId||null,rewards:this.chain[e]?.delegation?.rewards||0n})}awaitTx(e){return this.mempool[e+0]?(this.awaitBlock(),Promise.resolve(!0)):Promise.resolve(!0)}distributeRewards(e){for(const[t,{registeredStake:r,delegation:s}]of Object.entries(this.chain))r&&s.poolId&&(this.chain[t]={registeredStake:r,delegation:{poolId:s.poolId,rewards:s.rewards+=e}});this.awaitBlock()}submitTx(e){const t=a.C.Transaction.from_bytes((0,i.H_)(e)),r=t.body(),s=t.witness_set(),n=s.plutus_data(),o=a.C.hash_transaction(r).to_hex(),u=r.validity_start_interval()?parseInt(r.validity_start_interval().to_str()):null,c=r.ttl()?parseInt(r.ttl().to_str()):null;if(Number.isInteger(u)&&this.slot<u)throw new Error(`Lower bound (${u}) not in slot range (${this.slot}).`);if(Number.isInteger(c)&&this.slot>c)throw new Error(`Upper bound (${c}) not in slot range (${this.slot}).`);const l=(()=>{const e={};for(let t=0;t<(n?.len()||0);t++){const r=n.get(t);e[a.C.hash_plutus_data(r).to_hex()]=(0,i.NC)(r.to_bytes())}return e})(),d=new Set,h=(()=>{const e=[];for(let t=0;t<(s.vkeys()?.len()||0);t++){const r=s.vkeys().get(t),a=r.vkey().public_key(),n=a.hash().to_hex();if(!a.verify((0,i.H_)(o),r.signature()))throw new Error(`Invalid vkey witness. Key hash: ${n}`);e.push(n)}return e})(),m=a.C.Ed25519KeyHashes.new();h.forEach((e=>m.add(a.C.Ed25519KeyHash.from_hex(e))));const p=(()=>{const e=[];for(let t=0;t<(s.native_scripts()?.len()||0);t++){const r=s.native_scripts().get(t),n=r.hash(a.C.ScriptHashNamespace.NativeScript).to_hex();if(!r.verify(Number.isInteger(u)?a.C.BigNum.from_str(u.toString()):void 0,Number.isInteger(c)?a.C.BigNum.from_str(c.toString()):void 0,m))throw new Error(`Invalid native script witness. Script hash: ${n}`);for(let e=0;e<r.get_required_signers().len();e++){const t=r.get_required_signers().get(e).to_hex();d.add(t)}e.push(n)}return e})(),g={},y=[],f=(()=>{const e=[];for(let t=0;t<(s.plutus_scripts()?.len()||0);t++){const r=s.plutus_scripts().get(t).hash(a.C.ScriptHashNamespace.PlutusV1).to_hex();e.push(r)}for(let t=0;t<(s.plutus_v2_scripts()?.len()||0);t++){const r=s.plutus_v2_scripts().get(t).hash(a.C.ScriptHashNamespace.PlutusV2).to_hex();e.push(r)}return e})(),w=r.inputs();w.sort();const b=[];for(let e=0;e<w.len();e++){const t=w.get(e),r=t.transaction_id().to_hex()+t.index().to_str(),s=this.ledger[r],{entry:n,type:o}=s?{entry:s,type:"Ledger"}:{entry:this.mempool[r],type:"Mempool"};if(!n||n.spent)throw new Error(`Could not spend UTxO: ${JSON.stringify({txHash:n?.utxo.txHash,outputIndex:n?.utxo.outputIndex})}\nIt does not exist or was already spent.`);const u=n.utxo.scriptRef;if(u)switch(u.type){case"Native":{const e=a.C.NativeScript.from_bytes((0,i.H_)(u.script));g[e.hash(a.C.ScriptHashNamespace.NativeScript).to_hex()]=e;break}case"PlutusV1":{const e=a.C.PlutusScript.from_bytes((0,i.H_)(u.script));y.push(e.hash(a.C.ScriptHashNamespace.PlutusV1).to_hex());break}case"PlutusV2":{const e=a.C.PlutusScript.from_bytes((0,i.H_)(u.script));y.push(e.hash(a.C.ScriptHashNamespace.PlutusV2).to_hex());break}}n.utxo.datumHash&&d.add(n.utxo.datumHash),b.push({entry:n,type:o})}for(let e=0;e<(r.reference_inputs()?.len()||0);e++){const t=r.reference_inputs().get(e),s=t.transaction_id().to_hex()+t.index().to_str(),n=this.ledger[s]||this.mempool[s];if(!n||n.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:n?.utxo.txHash,outputIndex:n?.utxo.outputIndex})}\nIt does not exist or was already spent.`);const o=n.utxo.scriptRef;if(o)switch(o.type){case"Native":{const e=a.C.NativeScript.from_bytes((0,i.H_)(o.script));g[e.hash(a.C.ScriptHashNamespace.NativeScript).to_hex()]=e;break}case"PlutusV1":{const e=a.C.PlutusScript.from_bytes((0,i.H_)(o.script));y.push(e.hash(a.C.ScriptHashNamespace.PlutusV1).to_hex());break}case"PlutusV2":{const e=a.C.PlutusScript.from_bytes((0,i.H_)(o.script));y.push(e.hash(a.C.ScriptHashNamespace.PlutusV2).to_hex());break}}n.utxo.datumHash&&d.add(n.utxo.datumHash)}const _=(()=>{const e={0:"Spend",1:"Mint",2:"Cert",3:"Reward"},t=[];for(let r=0;r<(s.redeemers()?.len()||0);r++){const a=s.redeemers().get(r);t.push({tag:e[a.tag().kind()],index:parseInt(a.index().to_str())})}return t})();function C(e,t,r){switch(e.type){case"Key":if(!h.includes(e.hash))throw new Error(`Missing vkey witness. Key hash: ${e.hash}`);d.add(e.hash);break;case"Script":if(p.includes(e.hash)){d.add(e.hash);break}if(g[e.hash]){if(!g[e.hash].verify(Number.isInteger(u)?a.C.BigNum.from_str(u.toString()):void 0,Number.isInteger(c)?a.C.BigNum.from_str(c.toString()):void 0,m))throw new Error(`Invalid native script witness. Script hash: ${e.hash}`);break}if((f.includes(e.hash)||y.includes(e.hash))&&_.find((e=>e.tag===t&&e.index===r))){d.add(e.hash);break}throw new Error(`Missing script witness. Script hash: ${e.hash}`)}}for(let e=0;e<(r.collateral()?.len()||0);e++){const t=r.collateral().get(e),s=t.transaction_id().to_hex()+t.index().to_str(),a=this.ledger[s]||this.mempool[s];if(!a||a.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:a?.utxo.txHash,outputIndex:a?.utxo.outputIndex})}\nIt does not exist or was already spent.`);const{paymentCredential:n}=(0,i.IL)(a.utxo.address);if("Script"===n?.type)throw new Error("Collateral inputs can only contain vkeys.");C(n,null,null)}for(let e=0;e<(r.required_signers()?.len()||0);e++)C({type:"Key",hash:r.required_signers().get(e).to_hex()},null,null);for(let e=0;e<(r.mint()?.keys().len()||0);e++)C({type:"Script",hash:r.mint().keys().get(e).to_hex()},"Mint",e);const v=[];for(let e=0;e<(r.withdrawals()?.keys().len()||0);e++){const t=r.withdrawals().keys().get(e),s=BigInt(r.withdrawals().get(t).to_str()),a=t.to_address().to_bech32(void 0),{stakeCredential:n}=(0,i.IL)(a);if(C(n,"Reward",e),this.chain[a]?.delegation.rewards!==s)throw new Error("Withdrawal amount doesn't match actual reward balance.");v.push({rewardAddress:a,withdrawal:s})}const k=[];for(let e=0;e<(r.certs()?.len()||0);e++){const t=r.certs().get(e);switch(t.kind()){case 0:{const e=t.as_stake_registration(),r=a.C.RewardAddress.new(a.C.NetworkInfo.testnet().network_id(),e.stake_credential()).to_address().to_bech32(void 0);if(this.chain[r]?.registeredStake)throw new Error(`Stake key is already registered. Reward address: ${r}`);k.push({type:"Registration",rewardAddress:r});break}case 1:{const r=t.as_stake_deregistration(),s=a.C.RewardAddress.new(a.C.NetworkInfo.testnet().network_id(),r.stake_credential()).to_address().to_bech32(void 0),{stakeCredential:n}=(0,i.IL)(s);if(C(n,"Cert",e),!this.chain[s]?.registeredStake)throw new Error(`Stake key is already deregistered. Reward address: ${s}`);k.push({type:"Deregistration",rewardAddress:s});break}case 2:{const r=t.as_stake_delegation(),s=a.C.RewardAddress.new(a.C.NetworkInfo.testnet().network_id(),r.stake_credential()).to_address().to_bech32(void 0),n=r.pool_keyhash().to_bech32("pool"),{stakeCredential:o}=(0,i.IL)(s);if(C(o,"Cert",e),!this.chain[s]?.registeredStake&&!k.find((e=>"Registration"===e.type&&e.rewardAddress===s)))throw new Error(`Stake key is not registered. Reward address: ${s}`);k.push({type:"Delegation",rewardAddress:s,poolId:n});break}}}b.forEach((({entry:{utxo:e}},t)=>{const{paymentCredential:r}=(0,i.IL)(e.address);C(r,"Spend",t)}));const x=(()=>{const e=[];for(let t=0;t<r.outputs().len();t++){const s=r.outputs().get(t),n=a.C.TransactionUnspentOutput.new(a.C.TransactionInput.new(a.C.TransactionHash.from_hex(o),a.C.BigNum.from_str(t.toString())),s),u=(0,i.lo)(n);u.datumHash&&d.add(u.datumHash),e.push({utxo:u,spent:!1})}return e})(),[S]=h.filter((e=>!d.has(e)));if(S)throw new Error(`Extraneous vkey witness. Key hash: ${S}`);const[I]=p.filter((e=>!d.has(e)));if(I)throw new Error(`Extraneous native script. Script hash: ${I}`);const[E]=f.filter((e=>!d.has(e)));if(E)throw new Error(`Extraneous plutus script. Script hash: ${E}`);const[B]=Object.keys(l).filter((e=>!d.has(e)));if(B)throw new Error(`Extraneous plutus data. Datum hash: ${B}`);b.forEach((({entry:e,type:t})=>{const r=e.utxo.txHash+e.utxo.outputIndex;e.spent=!0,"Ledger"===t?this.ledger[r]=e:"Mempool"===t&&(this.mempool[r]=e)})),v.forEach((({rewardAddress:e,withdrawal:t})=>{this.chain[e].delegation.rewards-=t})),k.forEach((({type:e,rewardAddress:t,poolId:r})=>{switch(e){case"Registration":this.chain[t]?this.chain[t].registeredStake=!0:this.chain[t]={registeredStake:!0,delegation:{poolId:null,rewards:0n}};break;case"Deregistration":this.chain[t].registeredStake=!1,this.chain[t].delegation.poolId=null;break;case"Delegation":this.chain[t].delegation.poolId=r}})),x.forEach((({utxo:e,spent:t})=>{this.mempool[e.txHash+e.outputIndex]={utxo:e,spent:t}}));for(const[e,t]of Object.entries(l))this.datumTable[e]=t;return Promise.resolve(o)}log(){function e(e){const t="lovelace"===e?"1":e;let r=0;for(let e=0;e<t.length;e++)r+=t.charCodeAt(e);return"#"+((1<<24)+(123*r%256<<16)+(321*r%256<<8)+213*r%256).toString(16).slice(1)}const t={},r={};for(const{utxo:e}of Object.values(this.ledger))for(const[s,a]of Object.entries(e.assets))r[e.address]?r[e.address]?.[s]?r[e.address][s]+=a:r[e.address][s]=a:r[e.address]={[s]:a},t[s]?t[s]+=a:t[s]=a;console.log("\n%cBlockchain state","color:purple"),console.log(`\n    Block height:   %c${this.blockHeight}%c\n    Slot:           %c${this.slot}%c\n    Unix time:      %c${this.time}\n  `,"color:yellow","color:white","color:yellow","color:white","color:yellow"),console.log("\n");for(const[s,a]of Object.entries(r)){console.log(`Address: %c${s}`,"color:blue","\n");for(const[r,s]of Object.entries(a)){const a=Math.max(Math.floor(Number(s)/Number(t[r])*60),1);console.log(`%c${"▆".repeat(a)+" ".repeat(60-a)}`,`color: ${e(r)}`,"",`${r}:`,s,"")}console.log(`\n${"▁".repeat(60)}\n`)}}}s()}catch(e){s(e)}}))},209:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{O:()=>o});var a=r(609),n=r(483),i=e([a,n]);[a,n]=i.then?(await i)():i;class o{constructor(e,t){Object.defineProperty(this,"kupoUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ogmiosUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.kupoUrl=e,this.ogmiosUrl=t}async getProtocolParameters(){const e=await this.ogmiosWsp("Query",{query:"currentProtocolParameters"});return new Promise(((t,r)=>{e.addEventListener("message",(s=>{try{const{result:r}=JSON.parse(s.data),a={};Object.keys(r.costModels).forEach((e=>{const t=e.split(":")[1].toUpperCase();a["Plutus"+t]=r.costModels[e]}));const[n,i]=r.prices.memory.split("/"),[o,u]=r.prices.steps.split("/");t({minFeeA:parseInt(r.minFeeCoefficient),minFeeB:parseInt(r.minFeeConstant),maxTxSize:parseInt(r.maxTxSize),maxValSize:parseInt(r.maxValueSize),keyDeposit:BigInt(r.stakeKeyDeposit),poolDeposit:BigInt(r.poolDeposit),priceMem:parseInt(n)/parseInt(i),priceStep:parseInt(o)/parseInt(u),maxTxExMem:BigInt(r.maxExecutionUnitsPerTransaction.memory),maxTxExSteps:BigInt(r.maxExecutionUnitsPerTransaction.steps),coinsPerUtxoByte:BigInt(r.coinsPerUtxoByte),collateralPercentage:parseInt(r.collateralPercentage),maxCollateralInputs:parseInt(r.maxCollateralInputs),costModels:a}),e.close()}catch(e){r(e)}}),{once:!0})}))}async getUtxos(e){const t="string"==typeof e,r=t?e:e.hash,s=await fetch(`${this.kupoUrl}/matches/${r}${t?"":"/*"}?unspent`).then((e=>e.json()));return this.kupmiosUtxosToUtxos(s)}async getUtxosWithUnit(e,t){const r="string"==typeof e,s=r?e:e.hash,{policyId:a,assetName:i}=(0,n.g9)(t),o=await fetch(`${this.kupoUrl}/matches/${s}${r?"":"/*"}?unspent&policy_id=${a}${i?`&asset_name=${i}`:""}`).then((e=>e.json()));return this.kupmiosUtxosToUtxos(o)}async getUtxoByUnit(e){const{policyId:t,assetName:r}=(0,n.g9)(e),s=await fetch(`${this.kupoUrl}/matches/${t}.${r?`${r}`:"*"}?unspent`).then((e=>e.json())),a=await this.kupmiosUtxosToUtxos(s);if(a.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return a[0]}async getUtxosByOutRef(e){const t=[...new Set(e.map((e=>e.txHash)))];return(await Promise.all(t.map((async e=>{const t=await fetch(`${this.kupoUrl}/matches/*@${e}?unspent`).then((e=>e.json()));return this.kupmiosUtxosToUtxos(t)})))).reduce(((e,t)=>e.concat(t)),[]).filter((t=>e.some((e=>t.txHash===e.txHash&&t.outputIndex===e.outputIndex))))}async getDelegation(e){const t=await this.ogmiosWsp("Query",{query:{delegationsAndRewards:[e]}});return new Promise(((e,r)=>{t.addEventListener("message",(s=>{try{const{result:r}=JSON.parse(s.data),a=r?Object.values(r)[0]:{};e({poolId:a?.delegate||null,rewards:BigInt(a?.rewards||0)}),t.close()}catch(e){r(e)}}),{once:!0})}))}async getDatum(e){const t=await fetch(`${this.kupoUrl}/datums/${e}`).then((e=>e.json()));if(!t||!t.datum)throw new Error(`No datum found for datum hash: ${e}`);return t.datum}awaitTx(e,t=3e3){return new Promise((r=>{const s=setInterval((async()=>{const t=await fetch(`${this.kupoUrl}/matches/*@${e}?unspent`).then((e=>e.json()));if(t&&t.length>0)return clearInterval(s),void r(!0)}),t)}))}async submitTx(e){const t=await this.ogmiosWsp("SubmitTx",{submit:e});return new Promise(((e,r)=>{t.addEventListener("message",(s=>{try{const{result:a}=JSON.parse(s.data);a.SubmitSuccess?e(a.SubmitSuccess.txId):r(a.SubmitFail),t.close()}catch(e){r(e)}}),{once:!0})}))}kupmiosUtxosToUtxos(e){return Promise.all(e.map((async e=>({txHash:e.transaction_id,outputIndex:parseInt(e.output_index),address:e.address,assets:(()=>{const t={lovelace:BigInt(e.value.coins)};return Object.keys(e.value.assets).forEach((r=>{t[r.replace(".","")]=BigInt(e.value.assets[r])})),t})(),datumHash:"hash"===e?.datum_type?e.datum_hash:null,datum:"inline"===e?.datum_type?await this.getDatum(e.datum_hash):null,scriptRef:e.script_hash&&await(async()=>{const{script:t,language:r}=await fetch(`${this.kupoUrl}/scripts/${e.script_hash}`).then((e=>e.json()));return"native"===r?{type:"Native",script:t}:"plutus:v1"===r?{type:"PlutusV1",script:(0,n.NC)(a.C.PlutusScript.new((0,n.H_)(t)).to_bytes())}:"plutus:v2"===r?{type:"PlutusV2",script:(0,n.NC)(a.C.PlutusScript.new((0,n.H_)(t)).to_bytes())}:void 0})()}))))}async ogmiosWsp(e,t){const r=new WebSocket(this.ogmiosUrl);return await new Promise((e=>{r.addEventListener("open",(()=>e(1)),{once:!0})})),r.send(JSON.stringify({type:"jsonwsp/request",version:"1.0",servicename:"ogmios",methodname:e,args:t})),r}}s()}catch(e){s(e)}}))},347:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{Oo:()=>n.O});var a=r(307),n=r(209),i=r(802),o=e([a,n,i]);[a,n,i]=o.then?(await o)():o,s()}catch(e){s(e)}}))},293:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{D:()=>o,s:()=>i});var a=r(609),n=e([a]);function i(e){const t=a.C.Costmdls.new(),r=a.C.CostModel.new();Object.values(e.PlutusV1).forEach(((e,t)=>{r.set(t,a.C.Int.new(a.C.BigNum.from_str(e.toString())))})),t.insert(a.C.Language.new_plutus_v1(),r);const s=a.C.CostModel.new_plutus_v2();return Object.values(e.PlutusV2||[]).forEach(((e,t)=>{s.set(t,a.C.Int.new(a.C.BigNum.from_str(e.toString())))})),t.insert(a.C.Language.new_plutus_v2(),s),t}a=(n.then?(await n)():n)[0];const o={minFeeA:44,minFeeB:155381,maxTxSize:16384,maxValSize:5e3,keyDeposit:2000000n,poolDeposit:500000000n,priceMem:.0577,priceStep:721e-7,maxTxExMem:14000000n,maxTxExSteps:10000000000n,coinsPerUtxoByte:4310n,collateralPercentage:150,maxCollateralInputs:3,costModels:{PlutusV1:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEd25519Signature-cpu-arguments-intercept":9462713,"verifyEd25519Signature-cpu-arguments-slope":1021,"verifyEd25519Signature-memory-arguments":10},PlutusV2:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"serialiseData-cpu-arguments-intercept":1159724,"serialiseData-cpu-arguments-slope":392670,"serialiseData-memory-arguments-intercept":0,"serialiseData-memory-arguments-slope":2,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEcdsaSecp256k1Signature-cpu-arguments":35892428,"verifyEcdsaSecp256k1Signature-memory-arguments":10,"verifyEd25519Signature-cpu-arguments-intercept":57996947,"verifyEd25519Signature-cpu-arguments-slope":18975,"verifyEd25519Signature-memory-arguments":10,"verifySchnorrSecp256k1Signature-cpu-arguments-intercept":38887044,"verifySchnorrSecp256k1Signature-cpu-arguments-slope":32947,"verifySchnorrSecp256k1Signature-memory-arguments":10}}};s()}catch(u){s(u)}}))},799:(e,t,r)=>{r.a(e,(async(e,t)=>{try{r(246);var s=r(65),a=e([s]);s=(a.then?(await a)():a)[0],t()}catch(e){t(e)}}))},483:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{D:()=>n.D,DV:()=>a.D,H_:()=>n.H_,I9:()=>n.I9,IL:()=>n.IL,NC:()=>n.NC,Sw:()=>n.Sw,cQ:()=>n.cQ,dZ:()=>n.dZ,g9:()=>n.g9,lo:()=>n.lo,pZ:()=>n.pZ,sJ:()=>a.s});var a=r(293),n=r(65),i=r(799),o=e([a,n,i]);[a,n,i]=o.then?(await o)():o,s()}catch(e){s(e)}}))},65:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{D:()=>f,EE:()=>T,H_:()=>k,I9:()=>p,IL:()=>m,NC:()=>x,Sw:()=>_,cQ:()=>d,dZ:()=>v,g9:()=>B,lo:()=>C,pZ:()=>b,t1:()=>S});var a=r(507),n=r(609),i=r(774),o=r(398),u=r(271),c=r(611),l=e([n,i,c]);[n,i,c]=l.then?(await l)():l;class d{constructor(e){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e}validatorToAddress(e,t){const r=this.validatorToScriptHash(e);return t?n.C.BaseAddress.new(v(this.lucid.network),n.C.StakeCredential.from_scripthash(n.C.ScriptHash.from_hex(r)),"Key"===t.type?n.C.StakeCredential.from_keyhash(n.C.Ed25519KeyHash.from_hex(t.hash)):n.C.StakeCredential.from_scripthash(n.C.ScriptHash.from_hex(t.hash))).to_address().to_bech32(void 0):n.C.EnterpriseAddress.new(v(this.lucid.network),n.C.StakeCredential.from_scripthash(n.C.ScriptHash.from_hex(r))).to_address().to_bech32(void 0)}credentialToAddress(e,t){return t?n.C.BaseAddress.new(v(this.lucid.network),"Key"===e.type?n.C.StakeCredential.from_keyhash(n.C.Ed25519KeyHash.from_hex(e.hash)):n.C.StakeCredential.from_scripthash(n.C.ScriptHash.from_hex(e.hash)),"Key"===t.type?n.C.StakeCredential.from_keyhash(n.C.Ed25519KeyHash.from_hex(t.hash)):n.C.StakeCredential.from_scripthash(n.C.ScriptHash.from_hex(t.hash))).to_address().to_bech32(void 0):n.C.EnterpriseAddress.new(v(this.lucid.network),"Key"===e.type?n.C.StakeCredential.from_keyhash(n.C.Ed25519KeyHash.from_hex(e.hash)):n.C.StakeCredential.from_scripthash(n.C.ScriptHash.from_hex(e.hash))).to_address().to_bech32(void 0)}validatorToRewardAddress(e){const t=this.validatorToScriptHash(e);return n.C.RewardAddress.new(v(this.lucid.network),n.C.StakeCredential.from_scripthash(n.C.ScriptHash.from_hex(t))).to_address().to_bech32(void 0)}credentialToRewardAddress(e){return n.C.RewardAddress.new(v(this.lucid.network),"Key"===e.type?n.C.StakeCredential.from_keyhash(n.C.Ed25519KeyHash.from_hex(e.hash)):n.C.StakeCredential.from_scripthash(n.C.ScriptHash.from_hex(e.hash))).to_address().to_bech32(void 0)}validatorToScriptHash(e){switch(e.type){case"Native":return n.C.NativeScript.from_bytes(k(e.script)).hash(n.C.ScriptHashNamespace.NativeScript).to_hex();case"PlutusV1":return n.C.PlutusScript.from_bytes(k(T(e.script))).hash(n.C.ScriptHashNamespace.PlutusV1).to_hex();case"PlutusV2":return n.C.PlutusScript.from_bytes(k(T(e.script))).hash(n.C.ScriptHashNamespace.PlutusV2).to_hex();default:throw new Error("No variant matched")}}mintingPolicyToId(e){return this.validatorToScriptHash(e)}datumToHash(e){return n.C.hash_plutus_data(n.C.PlutusData.from_bytes(k(e))).to_hex()}scriptHashToCredential(e){return{type:"Script",hash:e}}keyHashToCredential(e){return{type:"Key",hash:e}}generatePrivateKey(){return n.C.PrivateKey.generate_ed25519().to_bech32()}generateSeedPhrase(){return(0,i.O)(256)}unixTimeToSlot(e){return(0,u.WN)(e,u.BV[this.lucid.network])}slotToUnixTime(e){return(0,u.cM)(e,u.BV[this.lucid.network])}getAddressDetails(e){return m(e)}nativeScriptFromJson(e){return P(e)}paymentCredentialOf(e){return p(e)}stakeCredentialOf(e){return g(e)}}function h(e){try{return n.C.Address.from_bytes(k(e))}catch(t){try{return n.C.Address.from_bech32(e)}catch(e){throw new Error("Could not deserialize address.")}}}function m(e){try{const t=n.C.BaseAddress.from_address(h(e)),r=0===t.payment_cred().kind()?{type:"Key",hash:x(t.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:x(t.payment_cred().to_scripthash().to_bytes())},s=0===t.stake_cred().kind()?{type:"Key",hash:x(t.stake_cred().to_keyhash().to_bytes())}:{type:"Script",hash:x(t.stake_cred().to_scripthash().to_bytes())};return{type:"Base",networkId:t.to_address().network_id(),address:{bech32:t.to_address().to_bech32(void 0),hex:x(t.to_address().to_bytes())},paymentCredential:r,stakeCredential:s}}catch(e){}try{const t=n.C.EnterpriseAddress.from_address(h(e)),r=0===t.payment_cred().kind()?{type:"Key",hash:x(t.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:x(t.payment_cred().to_scripthash().to_bytes())};return{type:"Enterprise",networkId:t.to_address().network_id(),address:{bech32:t.to_address().to_bech32(void 0),hex:x(t.to_address().to_bytes())},paymentCredential:r}}catch(e){}try{const t=n.C.PointerAddress.from_address(h(e)),r=0===t.payment_cred().kind()?{type:"Key",hash:x(t.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:x(t.payment_cred().to_scripthash().to_bytes())};return{type:"Pointer",networkId:t.to_address().network_id(),address:{bech32:t.to_address().to_bech32(void 0),hex:x(t.to_address().to_bytes())},paymentCredential:r}}catch(e){}try{const t=n.C.RewardAddress.from_address(h(e)),r=0===t.payment_cred().kind()?{type:"Key",hash:x(t.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:x(t.payment_cred().to_scripthash().to_bytes())};return{type:"Reward",networkId:t.to_address().network_id(),address:{bech32:t.to_address().to_bech32(void 0),hex:x(t.to_address().to_bytes())},stakeCredential:r}}catch(e){}throw new Error("No address type matched for: "+e)}function p(e){const{paymentCredential:t}=m(e);if(!t)throw new Error("The specified address does not contain a payment credential.");return t}function g(e){const{stakeCredential:t}=m(e);if(!t)throw new Error("The specified address does not contain a stake credential.");return t}function y(e){const t={};t.lovelace=BigInt(e.coin().to_str());const r=e.multiasset();if(r){const e=r.keys();for(let s=0;s<e.len();s++){const a=e.get(s),n=r.get(a),i=n.keys();for(let e=0;e<i.len();e++){const r=i.get(e),s=n.get(r);t[x(a.to_bytes())+x(r.name())]=BigInt(s.to_str())}}}return t}function f(e){const t=n.C.MultiAsset.new(),r=e.lovelace,s=Object.keys(e);Array.from(new Set(s.filter((e=>"lovelace"!==e)).map((e=>e.slice(0,56))))).forEach((r=>{const a=s.filter((e=>e.slice(0,56)===r)),i=n.C.Assets.new();a.forEach((t=>{i.insert(n.C.AssetName.new(k(t.slice(56))),n.C.BigNum.from_str(e[t].toString()))})),t.insert(n.C.ScriptHash.from_bytes(k(r)),i)}));const a=n.C.Value.new(n.C.BigNum.from_str(r?r.toString():"0"));return(s.length>1||!r)&&a.set_multiasset(t),a}function w(e){switch(e.get().kind()){case 0:return{type:"Native",script:x(e.get().as_native().to_bytes())};case 1:return{type:"PlutusV1",script:x(e.get().as_plutus_v1().to_bytes())};case 2:return{type:"PlutusV2",script:x(e.get().as_plutus_v2().to_bytes())};default:throw new Error("No variant matched.")}}function b(e){switch(e.type){case"Native":return n.C.ScriptRef.new(n.C.Script.new_native(n.C.NativeScript.from_bytes(k(e.script))));case"PlutusV1":return n.C.ScriptRef.new(n.C.Script.new_plutus_v1(n.C.PlutusScript.from_bytes(k(T(e.script)))));case"PlutusV2":return n.C.ScriptRef.new(n.C.Script.new_plutus_v2(n.C.PlutusScript.from_bytes(k(T(e.script)))));default:throw new Error("No variant matched.")}}function _(e){const t=(()=>{try{return n.C.Address.from_bech32(e.address)}catch(t){return n.C.ByronAddress.from_base58(e.address).to_address()}})(),r=n.C.TransactionOutput.new(t,f(e.assets));return e.datumHash&&r.set_datum(n.C.Datum.new_data_hash(n.C.DataHash.from_bytes(k(e.datumHash)))),!e.datumHash&&e.datum&&r.set_datum(n.C.Datum.new_data(n.C.Data.new(n.C.PlutusData.from_bytes(k(e.datum))))),e.scriptRef&&r.set_script_ref(b(e.scriptRef)),n.C.TransactionUnspentOutput.new(n.C.TransactionInput.new(n.C.TransactionHash.from_bytes(k(e.txHash)),n.C.BigNum.from_str(e.outputIndex.toString())),r)}function C(e){return{txHash:x(e.input().transaction_id().to_bytes()),outputIndex:parseInt(e.input().index().to_str()),assets:y(e.output().amount()),address:e.output().address().as_byron()?e.output().address().as_byron()?.to_base58():e.output().address().to_bech32(void 0),datumHash:e.output()?.datum()?.as_data_hash()?.to_hex(),datum:e.output()?.datum()?.as_data()&&x(e.output().datum().as_data().get().to_bytes()),scriptRef:e.output()?.script_ref()&&w(e.output().script_ref())}}function v(e){switch(e){case"Preview":case"Preprod":case"Custom":return 0;case"Mainnet":return 1;default:throw new Error("Network not found")}}function k(e){return(0,a.v5)(e)}function x(e){return(0,a.tm)(e)}function S(e){return x((new TextEncoder).encode(e))}function I(e){return(0,o.t)(k(e)).toString(16).padStart(2,"0")}function E(e){if(8!==e.length||"0"!==e[0]||"0"!==e[7])return null;const t=e.slice(1,5),r=parseInt(t,16);return e.slice(5,7)===I(t)?r:null}function B(e){const t=e.slice(0,56),r=e.slice(56)||null,s=E(e.slice(56,64));return{policyId:t,assetName:r,name:(Number.isInteger(s)?e.slice(64):e.slice(56))||null,label:s}}function P(e){return{type:"Native",script:x(n.C.encode_json_str_to_native_script(JSON.stringify(e),"",n.C.ScriptSchema.Node).to_bytes())}}function T(e){try{return n.C.PlutusScript.from_bytes(n.C.PlutusScript.from_bytes(k(e)).bytes()),e}catch(t){return x(n.C.PlutusScript.new(k(e)).to_bytes())}}s()}catch(O){s(O)}}))}},o={};function u(e){var t=o[e];if(void 0!==t)return t.exports;var r=o[e]={exports:{}};return i[e](r,r.exports,u),r.exports}u.m=i,e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",r="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",s=e=>{e&&!e.d&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},u.a=(a,n,i)=>{var o;i&&((o=[]).d=1);var u,c,l,d=new Set,h=a.exports,m=new Promise(((e,t)=>{l=t,c=e}));m[t]=h,m[e]=e=>(o&&e(o),d.forEach(e),m.catch((e=>{}))),a.exports=m,n((a=>{var n;u=(a=>a.map((a=>{if(null!==a&&"object"==typeof a){if(a[e])return a;if(a.then){var n=[];n.d=0,a.then((e=>{i[t]=e,s(n)}),(e=>{i[r]=e,s(n)}));var i={};return i[e]=e=>e(n),i}}var o={};return o[e]=e=>{},o[t]=a,o})))(a);var i=()=>u.map((e=>{if(e[r])throw e[r];return e[t]})),c=new Promise((t=>{(n=()=>t(i)).r=0;var r=e=>e!==o&&!d.has(e)&&(d.add(e),e&&!e.d&&(n.r++,e.push(n)));u.map((t=>t[e](r)))}));return n.r?c:i()}),(e=>(e?l(m[r]=e):c(h),s(o)))),o&&(o.d=0)},u.d=(e,t)=>{for(var r in t)u.o(t,r)&&!u.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},u.f={},u.e=e=>Promise.all(Object.keys(u.f).reduce(((t,r)=>(u.f[r](e,t),t)),[])),u.u=e=>e+".app.bundle.js",u.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),u.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a={},n="teddyswap.ui:",u.l=(e,t,r,s)=>{if(a[e])a[e].push(t);else{var i,o;if(void 0!==r)for(var c=document.getElementsByTagName("script"),l=0;l<c.length;l++){var d=c[l];if(d.getAttribute("src")==e||d.getAttribute("data-webpack")==n+r){i=d;break}}i||(o=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,u.nc&&i.setAttribute("nonce",u.nc),i.setAttribute("data-webpack",n+r),i.src=e),a[e]=[t];var h=(t,r)=>{i.onerror=i.onload=null,clearTimeout(m);var s=a[e];if(delete a[e],i.parentNode&&i.parentNode.removeChild(i),s&&s.forEach((e=>e(r))),t)return t(r)},m=setTimeout(h.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=h.bind(null,i.onerror),i.onload=h.bind(null,i.onload),o&&document.head.appendChild(i)}},u.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;u.g.importScripts&&(e=u.g.location+"");var t=u.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),u.p=e})(),(()=>{u.b=document.baseURI||self.location.href;var e={179:0};u.f.j=(t,r)=>{var s=u.o(e,t)?e[t]:void 0;if(0!==s)if(s)r.push(s[2]);else{var a=new Promise(((r,a)=>s=e[t]=[r,a]));r.push(s[2]=a);var n=u.p+u.u(t),i=new Error;u.l(n,(r=>{if(u.o(e,t)&&(0!==(s=e[t])&&(e[t]=void 0),s)){var a=r&&("load"===r.type?"missing":r.type),n=r&&r.target&&r.target.src;i.message="Loading chunk "+t+" failed.\n("+a+": "+n+")",i.name="ChunkLoadError",i.type=a,i.request=n,s[1](i)}}),"chunk-"+t,t)}};var t=(t,r)=>{var s,a,[n,i,o]=r,c=0;if(n.some((t=>0!==e[t]))){for(s in i)u.o(i,s)&&(u.m[s]=i[s]);o&&o(u)}for(t&&t(r);c<n.length;c++)a=n[c],u.o(e,a)&&e[a]&&e[a][0](),e[a]=0},r=self.webpackChunkteddyswap_ui=self.webpackChunkteddyswap_ui||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),u(882)})();